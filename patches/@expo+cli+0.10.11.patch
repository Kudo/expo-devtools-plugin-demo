diff --git a/node_modules/@expo/cli/build/bin/cli b/node_modules/@expo/cli/build/bin/cli
index bd58a24..d077a18 100755
--- a/node_modules/@expo/cli/build/bin/cli
+++ b/node_modules/@expo/cli/build/bin/cli
@@ -132,7 +132,7 @@ const args = (0, _arg).default({
 });
 if (args["--version"]) {
     // Version is added in the build script.
-    console.log("0.10.11");
+    console.log("0.10.13");
     process.exit(0);
 }
 if (args["--non-interactive"]) {
@@ -262,7 +262,7 @@ commands[command]().then((exec)=>{
     logEventAsync("action", {
         action: `expo ${command}`,
         source: "expo/cli",
-        source_version: "0.10.11"
+        source_version: "0.10.13"
     });
 });
 
diff --git a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js
index f6419be..4e4322f 100644
--- a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js
+++ b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js
@@ -24,7 +24,7 @@ async function exportWebAsync(projectRoot, options) {
     const { exp  } = (0, _config).getConfig(projectRoot);
     const platformBundlers = (0, _platformBundlers).getPlatformBundlers(exp);
     // Create a bundler interface
-    const bundler = new _webpackBundlerDevServer.WebpackBundlerDevServer(projectRoot, platformBundlers, false);
+    const bundler = new _webpackBundlerDevServer.WebpackBundlerDevServer(projectRoot, platformBundlers);
     // If the user set `web.bundler: 'metro'` then they should use `expo export` instead.
     if (!bundler.isTargetingWeb()) {
         throw new _errors.CommandError(_chalk.default`{bold expo export:web} can only be used with Webpack. Use {bold expo export} for other bundlers.`);
diff --git a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map
index 6576d28..c3e196e 100644
--- a/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map
+++ b/node_modules/@expo/cli/build/src/export/web/exportWebAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/export/web/exportWebAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport { Log } from '../../log';\nimport { WebSupportProjectPrerequisite } from '../../start/doctor/web/WebSupportProjectPrerequisite';\nimport { getPlatformBundlers } from '../../start/server/platformBundlers';\nimport { WebpackBundlerDevServer } from '../../start/server/webpack/WebpackBundlerDevServer';\nimport { CommandError } from '../../utils/errors';\nimport { setNodeEnv } from '../../utils/nodeEnv';\nimport { Options } from './resolveOptions';\n\nexport async function exportWebAsync(projectRoot: string, options: Options) {\n  // Ensure webpack is available\n  await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n\n  setNodeEnv(options.dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const { exp } = getConfig(projectRoot);\n  const platformBundlers = getPlatformBundlers(exp);\n  // Create a bundler interface\n  const bundler = new WebpackBundlerDevServer(projectRoot, platformBundlers, false);\n\n  // If the user set `web.bundler: 'metro'` then they should use `expo export` instead.\n  if (!bundler.isTargetingWeb()) {\n    throw new CommandError(\n      chalk`{bold expo export:web} can only be used with Webpack. Use {bold expo export} for other bundlers.`\n    );\n  }\n\n  Log.log(`Exporting with Webpack...`);\n\n  // Bundle the app\n  await bundler.bundleAsync({\n    mode: options.dev ? 'development' : 'production',\n    clear: options.clear,\n  });\n}\n"],"names":["exportWebAsync","projectRoot","options","WebSupportProjectPrerequisite","assertAsync","setNodeEnv","dev","require","load","exp","getConfig","platformBundlers","getPlatformBundlers","bundler","WebpackBundlerDevServer","isTargetingWeb","CommandError","chalk","Log","log","bundleAsync","mode","clear"],"mappings":"AAAA;;;;QAWsBA,cAAc,GAAdA,cAAc;AAXV,IAAA,OAAc,WAAd,cAAc,CAAA;AACtB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAEL,IAAA,IAAW,WAAX,WAAW,CAAA;AACe,IAAA,8BAAsD,WAAtD,sDAAsD,CAAA;AAChE,IAAA,iBAAqC,WAArC,qCAAqC,CAAA;AACjC,IAAA,wBAAoD,WAApD,oDAAoD,CAAA;AAC/D,IAAA,OAAoB,WAApB,oBAAoB,CAAA;AACtB,IAAA,QAAqB,WAArB,qBAAqB,CAAA;;;;;;AAGzC,eAAeA,cAAc,CAACC,WAAmB,EAAEC,OAAgB,EAAE;IAC1E,8BAA8B;IAC9B,MAAM,IAAIC,8BAA6B,8BAAA,CAACF,WAAW,CAAC,CAACG,WAAW,EAAE,CAAC;IAEnEC,CAAAA,GAAAA,QAAU,AAA4C,CAAA,WAA5C,CAACH,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY,CAAC,CAAC;IACvDC,OAAO,CAAC,WAAW,CAAC,CAACC,IAAI,CAACP,WAAW,CAAC,CAAC;IAEvC,MAAM,EAAEQ,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAa,CAAA,UAAb,CAACT,WAAW,CAAC,AAAC;IACvC,MAAMU,gBAAgB,GAAGC,CAAAA,GAAAA,iBAAmB,AAAK,CAAA,oBAAL,CAACH,GAAG,CAAC,AAAC;IAClD,6BAA6B;IAC7B,MAAMI,OAAO,GAAG,IAAIC,wBAAuB,wBAAA,CAACb,WAAW,EAAEU,gBAAgB,EAAE,KAAK,CAAC,AAAC;IAElF,qFAAqF;IACrF,IAAI,CAACE,OAAO,CAACE,cAAc,EAAE,EAAE;QAC7B,MAAM,IAAIC,OAAY,aAAA,CACpBC,MAAK,QAAA,CAAC,gGAAgG,CAAC,CACxG,CAAC;KACH;IAEDC,IAAG,IAAA,CAACC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAErC,iBAAiB;IACjB,MAAMN,OAAO,CAACO,WAAW,CAAC;QACxBC,IAAI,EAAEnB,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY;QAChDgB,KAAK,EAAEpB,OAAO,CAACoB,KAAK;KACrB,CAAC,CAAC;CACJ"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/export/web/exportWebAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport { Log } from '../../log';\nimport { WebSupportProjectPrerequisite } from '../../start/doctor/web/WebSupportProjectPrerequisite';\nimport { getPlatformBundlers } from '../../start/server/platformBundlers';\nimport { WebpackBundlerDevServer } from '../../start/server/webpack/WebpackBundlerDevServer';\nimport { CommandError } from '../../utils/errors';\nimport { setNodeEnv } from '../../utils/nodeEnv';\nimport { Options } from './resolveOptions';\n\nexport async function exportWebAsync(projectRoot: string, options: Options) {\n  // Ensure webpack is available\n  await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n\n  setNodeEnv(options.dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const { exp } = getConfig(projectRoot);\n  const platformBundlers = getPlatformBundlers(exp);\n  // Create a bundler interface\n  const bundler = new WebpackBundlerDevServer(projectRoot, platformBundlers);\n\n  // If the user set `web.bundler: 'metro'` then they should use `expo export` instead.\n  if (!bundler.isTargetingWeb()) {\n    throw new CommandError(\n      chalk`{bold expo export:web} can only be used with Webpack. Use {bold expo export} for other bundlers.`\n    );\n  }\n\n  Log.log(`Exporting with Webpack...`);\n\n  // Bundle the app\n  await bundler.bundleAsync({\n    mode: options.dev ? 'development' : 'production',\n    clear: options.clear,\n  });\n}\n"],"names":["exportWebAsync","projectRoot","options","WebSupportProjectPrerequisite","assertAsync","setNodeEnv","dev","require","load","exp","getConfig","platformBundlers","getPlatformBundlers","bundler","WebpackBundlerDevServer","isTargetingWeb","CommandError","chalk","Log","log","bundleAsync","mode","clear"],"mappings":"AAAA;;;;QAWsBA,cAAc,GAAdA,cAAc;AAXV,IAAA,OAAc,WAAd,cAAc,CAAA;AACtB,IAAA,MAAO,kCAAP,OAAO,EAAA;AAEL,IAAA,IAAW,WAAX,WAAW,CAAA;AACe,IAAA,8BAAsD,WAAtD,sDAAsD,CAAA;AAChE,IAAA,iBAAqC,WAArC,qCAAqC,CAAA;AACjC,IAAA,wBAAoD,WAApD,oDAAoD,CAAA;AAC/D,IAAA,OAAoB,WAApB,oBAAoB,CAAA;AACtB,IAAA,QAAqB,WAArB,qBAAqB,CAAA;;;;;;AAGzC,eAAeA,cAAc,CAACC,WAAmB,EAAEC,OAAgB,EAAE;IAC1E,8BAA8B;IAC9B,MAAM,IAAIC,8BAA6B,8BAAA,CAACF,WAAW,CAAC,CAACG,WAAW,EAAE,CAAC;IAEnEC,CAAAA,GAAAA,QAAU,AAA4C,CAAA,WAA5C,CAACH,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY,CAAC,CAAC;IACvDC,OAAO,CAAC,WAAW,CAAC,CAACC,IAAI,CAACP,WAAW,CAAC,CAAC;IAEvC,MAAM,EAAEQ,GAAG,CAAA,EAAE,GAAGC,CAAAA,GAAAA,OAAS,AAAa,CAAA,UAAb,CAACT,WAAW,CAAC,AAAC;IACvC,MAAMU,gBAAgB,GAAGC,CAAAA,GAAAA,iBAAmB,AAAK,CAAA,oBAAL,CAACH,GAAG,CAAC,AAAC;IAClD,6BAA6B;IAC7B,MAAMI,OAAO,GAAG,IAAIC,wBAAuB,wBAAA,CAACb,WAAW,EAAEU,gBAAgB,CAAC,AAAC;IAE3E,qFAAqF;IACrF,IAAI,CAACE,OAAO,CAACE,cAAc,EAAE,EAAE;QAC7B,MAAM,IAAIC,OAAY,aAAA,CACpBC,MAAK,QAAA,CAAC,gGAAgG,CAAC,CACxG,CAAC;KACH;IAEDC,IAAG,IAAA,CAACC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAErC,iBAAiB;IACjB,MAAMN,OAAO,CAACO,WAAW,CAAC;QACxBC,IAAI,EAAEnB,OAAO,CAACI,GAAG,GAAG,aAAa,GAAG,YAAY;QAChDgB,KAAK,EAAEpB,OAAO,CAACoB,KAAK;KACrB,CAAC,CAAC;CACJ"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js
index 9f316d1..0dc438b 100644
--- a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js
+++ b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js
@@ -111,9 +111,9 @@ class DevServerManagerActions {
         this.devServerManager.broadcastMessage("reload");
     }
     async openMoreToolsAsync() {
+        // Options match: Chrome > View > Developer
         try {
-            // Options match: Chrome > View > Developer
-            const value = await (0, _prompts).selectAsync(_chalk.default`Dev tools {dim (native only)}`, [
+            const defaultMenuItems = [
                 {
                     title: "Inspect elements",
                     value: "toggleElementInspector"
@@ -131,15 +131,34 @@ class DevServerManagerActions {
                     value: "reload"
                 },
                 {
-                    title: "Start React devtools",
-                    value: "startReactDevTools"
-                }, 
-            ]);
-            if (value === "startReactDevTools") {
-                this.startReactDevToolsAsync();
-            } else {
+                    title: "Open React devtools",
+                    value: "openReactDevTools",
+                    action: this.openReactDevToolsAsync
+                }
+            ];
+            const pluginMenuItems = (await this.devServerManager.devtoolsPluginManager.queryPluginsAsync()).map((plugin)=>({
+                    title: _chalk.default`Open devtools plugin - {bold ${plugin.packageName}}`,
+                    value: `devtoolsPlugin:${plugin.packageName}`,
+                    action: async ()=>{
+                        const url = new URL(plugin.webpageEndpoint, this.devServerManager.getDefaultDevServer().getUrlCreator().constructUrl({
+                            scheme: "http"
+                        }));
+                        await (0, _open).openBrowserAsync(url.toString());
+                    }
+                })
+            );
+            const menuItems = [
+                ...defaultMenuItems,
+                ...pluginMenuItems
+            ];
+            const value = await (0, _prompts).selectAsync(_chalk.default`Dev tools {dim (native only)}`, menuItems);
+            const menuItem = menuItems.find((item)=>item.value === value
+            );
+            if (menuItem == null ? void 0 : menuItem.action) {
+                menuItem.action();
+            } else if (menuItem == null ? void 0 : menuItem.value) {
                 this.devServerManager.broadcastMessage("sendDevCommand", {
-                    name: value
+                    name: menuItem.value
                 });
             }
         } catch (error) {
@@ -149,7 +168,7 @@ class DevServerManagerActions {
             (0, _commandsTable).printHelp();
         }
     }
-    async startReactDevToolsAsync() {
+    async openReactDevToolsAsync() {
         await (0, _reactDevToolsProxy).startReactDevToolsProxyAsync();
         const url = this.devServerManager.getDefaultDevServer().getReactDevToolsUrl();
         await (0, _open).openBrowserAsync(url);
diff --git a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map
index c83cc42..cbe6a20 100644
--- a/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map
+++ b/node_modules/@expo/cli/build/src/start/interface/interactiveActions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/interface/interactiveActions.ts"],"sourcesContent":["import { openJsInspector, queryAllInspectorAppsAsync } from '@expo/dev-server';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport * as Log from '../../log';\nimport { delayAsync } from '../../utils/delay';\nimport { learnMore } from '../../utils/link';\nimport { openBrowserAsync } from '../../utils/open';\nimport { selectAsync } from '../../utils/prompts';\nimport { DevServerManager } from '../server/DevServerManager';\nimport {\n  addReactDevToolsReloadListener,\n  startReactDevToolsProxyAsync,\n} from '../server/ReactDevToolsProxy';\nimport { BLT, printHelp, printItem, printQRCode, printUsage, StartOptions } from './commandsTable';\n\nconst debug = require('debug')('expo:start:interface:interactiveActions') as typeof console.log;\n\n/** Wraps the DevServerManager and adds an interface for user actions. */\nexport class DevServerManagerActions {\n  constructor(private devServerManager: DevServerManager) {}\n\n  printDevServerInfo(\n    options: Pick<StartOptions, 'devClient' | 'isWebSocketsEnabled' | 'platforms'>\n  ) {\n    // If native dev server is running, print its URL.\n    if (this.devServerManager.getNativeDevServerPort()) {\n      const devServer = this.devServerManager.getDefaultDevServer();\n      try {\n        const nativeRuntimeUrl = devServer.getNativeRuntimeUrl()!;\n        const interstitialPageUrl = devServer.getRedirectUrl();\n\n        printQRCode(interstitialPageUrl ?? nativeRuntimeUrl);\n\n        if (interstitialPageUrl) {\n          Log.log(\n            printItem(\n              chalk`Choose an app to open your project at {underline ${interstitialPageUrl}}`\n            )\n          );\n        }\n        Log.log(printItem(chalk`Metro waiting on {underline ${nativeRuntimeUrl}}`));\n        if (options.devClient === false) {\n          // TODO: if development build, change this message!\n          Log.log(\n            printItem('Scan the QR code above with Expo Go (Android) or the Camera app (iOS)')\n          );\n        } else {\n          Log.log(\n            printItem(\n              'Scan the QR code above to open the project in a development build. ' +\n                learnMore('https://expo.fyi/start')\n            )\n          );\n        }\n      } catch (error) {\n        console.log('err', error);\n        // @ts-ignore: If there is no development build scheme, then skip the QR code.\n        if (error.code !== 'NO_DEV_CLIENT_SCHEME') {\n          throw error;\n        } else {\n          const serverUrl = devServer.getDevServerUrl();\n          Log.log(printItem(chalk`Metro waiting on {underline ${serverUrl}}`));\n          Log.log(printItem(`Linking is disabled because the client scheme cannot be resolved.`));\n        }\n      }\n    }\n\n    const webDevServer = this.devServerManager.getWebDevServer();\n    const webUrl = webDevServer?.getDevServerUrl({ hostType: 'localhost' });\n    if (webUrl) {\n      Log.log();\n      Log.log(printItem(chalk`Web is waiting on {underline ${webUrl}}`));\n    }\n\n    printUsage(options, { verbose: false });\n    printHelp();\n    Log.log();\n  }\n\n  async openJsInspectorAsync() {\n    Log.log('Opening JavaScript inspector in the browser...');\n    const metroServerOrigin = this.devServerManager.getDefaultDevServer().getJsInspectorBaseUrl();\n    assert(metroServerOrigin, 'Metro dev server is not running');\n    const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n    if (!apps.length) {\n      Log.warn(\n        `No compatible apps connected. JavaScript Debugging can only be used with the Hermes engine. ${learnMore(\n          'https://docs.expo.dev/guides/using-hermes/'\n        )}`\n      );\n      return;\n    }\n    try {\n      for (const app of apps) {\n        await openJsInspector(app);\n      }\n    } catch (error: any) {\n      Log.error('Failed to open JavaScript inspector. This is often an issue with Google Chrome.');\n      Log.exception(error);\n    }\n  }\n\n  reloadApp() {\n    Log.log(`${BLT} Reloading apps`);\n    // Send reload requests over the dev servers\n    this.devServerManager.broadcastMessage('reload');\n  }\n\n  async openMoreToolsAsync() {\n    try {\n      // Options match: Chrome > View > Developer\n      const value = await selectAsync(chalk`Dev tools {dim (native only)}`, [\n        { title: 'Inspect elements', value: 'toggleElementInspector' },\n        { title: 'Toggle performance monitor', value: 'togglePerformanceMonitor' },\n        { title: 'Toggle developer menu', value: 'toggleDevMenu' },\n        { title: 'Reload app', value: 'reload' },\n        { title: 'Start React devtools', value: 'startReactDevTools' },\n        // TODO: Maybe a \"View Source\" option to open code.\n        // Toggling Remote JS Debugging is pretty rough, so leaving it disabled.\n        // { title: 'Toggle Remote Debugging', value: 'toggleRemoteDebugging' },\n      ]);\n      if (value === 'startReactDevTools') {\n        this.startReactDevToolsAsync();\n      } else {\n        this.devServerManager.broadcastMessage('sendDevCommand', { name: value });\n      }\n    } catch (error: any) {\n      debug(error);\n      // do nothing\n    } finally {\n      printHelp();\n    }\n  }\n\n  async startReactDevToolsAsync() {\n    await startReactDevToolsProxyAsync();\n    const url = this.devServerManager.getDefaultDevServer().getReactDevToolsUrl();\n    await openBrowserAsync(url);\n    addReactDevToolsReloadListener(() => {\n      this.reconnectReactDevTools();\n    });\n    this.reconnectReactDevTools();\n  }\n\n  async reconnectReactDevTools() {\n    // Wait a little time for react-devtools to be initialized in browser\n    await delayAsync(3000);\n    this.devServerManager.broadcastMessage('sendDevCommand', { name: 'reconnectReactDevTools' });\n  }\n\n  toggleDevMenu() {\n    Log.log(`${BLT} Toggling dev menu`);\n    this.devServerManager.broadcastMessage('devMenu');\n  }\n}\n"],"names":["Log","debug","require","DevServerManagerActions","constructor","devServerManager","printDevServerInfo","options","getNativeDevServerPort","devServer","getDefaultDevServer","nativeRuntimeUrl","getNativeRuntimeUrl","interstitialPageUrl","getRedirectUrl","printQRCode","log","printItem","chalk","devClient","learnMore","error","console","code","serverUrl","getDevServerUrl","webDevServer","getWebDevServer","webUrl","hostType","printUsage","verbose","printHelp","openJsInspectorAsync","metroServerOrigin","getJsInspectorBaseUrl","assert","apps","queryAllInspectorAppsAsync","length","warn","app","openJsInspector","exception","reloadApp","BLT","broadcastMessage","openMoreToolsAsync","value","selectAsync","title","startReactDevToolsAsync","name","startReactDevToolsProxyAsync","url","getReactDevToolsUrl","openBrowserAsync","addReactDevToolsReloadListener","reconnectReactDevTools","delayAsync","toggleDevMenu"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/interface/interactiveActions.ts"],"sourcesContent":["import { openJsInspector, queryAllInspectorAppsAsync } from '@expo/dev-server';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport * as Log from '../../log';\nimport { delayAsync } from '../../utils/delay';\nimport { learnMore } from '../../utils/link';\nimport { openBrowserAsync } from '../../utils/open';\nimport { ExpoChoice, selectAsync } from '../../utils/prompts';\nimport { DevServerManager } from '../server/DevServerManager';\nimport {\n  addReactDevToolsReloadListener,\n  startReactDevToolsProxyAsync,\n} from '../server/ReactDevToolsProxy';\nimport { BLT, printHelp, printItem, printQRCode, printUsage, StartOptions } from './commandsTable';\n\nconst debug = require('debug')('expo:start:interface:interactiveActions') as typeof console.log;\n\ninterface MoreToolMenuItem extends ExpoChoice<string> {\n  action?: () => unknown;\n}\n\n/** Wraps the DevServerManager and adds an interface for user actions. */\nexport class DevServerManagerActions {\n  constructor(private devServerManager: DevServerManager) {}\n\n  printDevServerInfo(\n    options: Pick<StartOptions, 'devClient' | 'isWebSocketsEnabled' | 'platforms'>\n  ) {\n    // If native dev server is running, print its URL.\n    if (this.devServerManager.getNativeDevServerPort()) {\n      const devServer = this.devServerManager.getDefaultDevServer();\n      try {\n        const nativeRuntimeUrl = devServer.getNativeRuntimeUrl()!;\n        const interstitialPageUrl = devServer.getRedirectUrl();\n\n        printQRCode(interstitialPageUrl ?? nativeRuntimeUrl);\n\n        if (interstitialPageUrl) {\n          Log.log(\n            printItem(\n              chalk`Choose an app to open your project at {underline ${interstitialPageUrl}}`\n            )\n          );\n        }\n        Log.log(printItem(chalk`Metro waiting on {underline ${nativeRuntimeUrl}}`));\n        if (options.devClient === false) {\n          // TODO: if development build, change this message!\n          Log.log(\n            printItem('Scan the QR code above with Expo Go (Android) or the Camera app (iOS)')\n          );\n        } else {\n          Log.log(\n            printItem(\n              'Scan the QR code above to open the project in a development build. ' +\n                learnMore('https://expo.fyi/start')\n            )\n          );\n        }\n      } catch (error) {\n        console.log('err', error);\n        // @ts-ignore: If there is no development build scheme, then skip the QR code.\n        if (error.code !== 'NO_DEV_CLIENT_SCHEME') {\n          throw error;\n        } else {\n          const serverUrl = devServer.getDevServerUrl();\n          Log.log(printItem(chalk`Metro waiting on {underline ${serverUrl}}`));\n          Log.log(printItem(`Linking is disabled because the client scheme cannot be resolved.`));\n        }\n      }\n    }\n\n    const webDevServer = this.devServerManager.getWebDevServer();\n    const webUrl = webDevServer?.getDevServerUrl({ hostType: 'localhost' });\n    if (webUrl) {\n      Log.log();\n      Log.log(printItem(chalk`Web is waiting on {underline ${webUrl}}`));\n    }\n\n    printUsage(options, { verbose: false });\n    printHelp();\n    Log.log();\n  }\n\n  async openJsInspectorAsync() {\n    Log.log('Opening JavaScript inspector in the browser...');\n    const metroServerOrigin = this.devServerManager.getDefaultDevServer().getJsInspectorBaseUrl();\n    assert(metroServerOrigin, 'Metro dev server is not running');\n    const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n    if (!apps.length) {\n      Log.warn(\n        `No compatible apps connected. JavaScript Debugging can only be used with the Hermes engine. ${learnMore(\n          'https://docs.expo.dev/guides/using-hermes/'\n        )}`\n      );\n      return;\n    }\n    try {\n      for (const app of apps) {\n        await openJsInspector(app);\n      }\n    } catch (error: any) {\n      Log.error('Failed to open JavaScript inspector. This is often an issue with Google Chrome.');\n      Log.exception(error);\n    }\n  }\n\n  reloadApp() {\n    Log.log(`${BLT} Reloading apps`);\n    // Send reload requests over the dev servers\n    this.devServerManager.broadcastMessage('reload');\n  }\n\n  async openMoreToolsAsync() {\n    // Options match: Chrome > View > Developer\n    try {\n      const defaultMenuItems: MoreToolMenuItem[] = [\n        { title: 'Inspect elements', value: 'toggleElementInspector' },\n        { title: 'Toggle performance monitor', value: 'togglePerformanceMonitor' },\n        { title: 'Toggle developer menu', value: 'toggleDevMenu' },\n        { title: 'Reload app', value: 'reload' },\n        {\n          title: 'Open React devtools',\n          value: 'openReactDevTools',\n          action: this.openReactDevToolsAsync,\n        },\n        // TODO: Maybe a \"View Source\" option to open code.\n      ];\n      const pluginMenuItems = (\n        await this.devServerManager.devtoolsPluginManager.queryPluginsAsync()\n      ).map((plugin) => ({\n        title: chalk`Open devtools plugin - {bold ${plugin.packageName}}`,\n        value: `devtoolsPlugin:${plugin.packageName}`,\n        action: async () => {\n          const url = new URL(\n            plugin.webpageEndpoint,\n            this.devServerManager\n              .getDefaultDevServer()\n              .getUrlCreator()\n              .constructUrl({ scheme: 'http' })\n          );\n          await openBrowserAsync(url.toString());\n        },\n      }));\n      const menuItems = [...defaultMenuItems, ...pluginMenuItems];\n      const value = await selectAsync(chalk`Dev tools {dim (native only)}`, menuItems);\n      const menuItem = menuItems.find((item) => item.value === value);\n      if (menuItem?.action) {\n        menuItem.action();\n      } else if (menuItem?.value) {\n        this.devServerManager.broadcastMessage('sendDevCommand', { name: menuItem.value });\n      }\n    } catch (error: any) {\n      debug(error);\n      // do nothing\n    } finally {\n      printHelp();\n    }\n  }\n\n  async openReactDevToolsAsync() {\n    await startReactDevToolsProxyAsync();\n    const url = this.devServerManager.getDefaultDevServer().getReactDevToolsUrl();\n    await openBrowserAsync(url);\n    addReactDevToolsReloadListener(() => {\n      this.reconnectReactDevTools();\n    });\n    this.reconnectReactDevTools();\n  }\n\n  async reconnectReactDevTools() {\n    // Wait a little time for react-devtools to be initialized in browser\n    await delayAsync(3000);\n    this.devServerManager.broadcastMessage('sendDevCommand', { name: 'reconnectReactDevTools' });\n  }\n\n  toggleDevMenu() {\n    Log.log(`${BLT} Toggling dev menu`);\n    this.devServerManager.broadcastMessage('devMenu');\n  }\n}\n"],"names":["Log","debug","require","DevServerManagerActions","constructor","devServerManager","printDevServerInfo","options","getNativeDevServerPort","devServer","getDefaultDevServer","nativeRuntimeUrl","getNativeRuntimeUrl","interstitialPageUrl","getRedirectUrl","printQRCode","log","printItem","chalk","devClient","learnMore","error","console","code","serverUrl","getDevServerUrl","webDevServer","getWebDevServer","webUrl","hostType","printUsage","verbose","printHelp","openJsInspectorAsync","metroServerOrigin","getJsInspectorBaseUrl","assert","apps","queryAllInspectorAppsAsync","length","warn","app","openJsInspector","exception","reloadApp","BLT","broadcastMessage","openMoreToolsAsync","defaultMenuItems","title","value","action","openReactDevToolsAsync","pluginMenuItems","devtoolsPluginManager","queryPluginsAsync","map","plugin","packageName","url","URL","webpageEndpoint","getUrlCreator","constructUrl","scheme","openBrowserAsync","toString","menuItems","selectAsync","menuItem","find","item","name","startReactDevToolsProxyAsync","getReactDevToolsUrl","addReactDevToolsReloadListener","reconnectReactDevTools","delayAsync","toggleDevMenu"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js
index 0982d1d..d34619b 100644
--- a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js
+++ b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js
@@ -4,6 +4,7 @@ Object.defineProperty(exports, "__esModule", {
 });
 var _assert = _interopRequireDefault(require("assert"));
 var _resolveFrom = _interopRequireDefault(require("resolve-from"));
+var _devToolsPluginManager = _interopRequireDefault(require("./DevToolsPluginManager"));
 var Log = _interopRequireWildcard(require("../../log"));
 var _fileNotifier = require("../../utils/FileNotifier");
 var _delay = require("../../utils/delay");
@@ -51,16 +52,19 @@ const MIDDLEWARES = {
     "expo-updates": ()=>require("./middleware/ExpoGoManifestHandlerMiddleware").ExpoGoManifestHandlerMiddleware
 };
 class BundlerDevServer {
-    constructor(projectRoot, platformBundlers, isDevClient){
+    constructor(projectRoot, platformBundlers, /** Advanced options */ options){
         this.projectRoot = projectRoot;
         this.platformBundlers = platformBundlers;
-        this.isDevClient = isDevClient;
         this.ngrok = null;
         this.devSession = null;
         this.instance = null;
         this.platformManagers = {};
         this.urlCreator = null;
         this.notifier = null;
+        var ref;
+        this.devToolsPluginManager = (ref = options == null ? void 0 : options.devToolsPluginManager) != null ? ref : new _devToolsPluginManager.default(projectRoot);
+        var ref1;
+        this.isDevClient = (ref1 = options == null ? void 0 : options.isDevClient) != null ? ref1 : false;
     }
     setInstance(instance) {
         this.instance = instance;
@@ -157,8 +161,8 @@ class BundlerDevServer {
     async startDevSessionAsync() {
         var // This is used to make Expo Go open the project in either Expo Go, or the web browser.
         // Must come after ngrok (`startTunnelAsync`) setup.
-        ref1;
-        (ref1 = this.devSession) == null ? void 0 : ref1.stopNotifying == null ? void 0 : ref1.stopNotifying();
+        ref2;
+        (ref2 = this.devSession) == null ? void 0 : ref2.stopNotifying == null ? void 0 : ref2.stopNotifying();
         this.devSession = new _developmentSession.DevelopmentSession(this.projectRoot, // This URL will be used on external devices so the computer IP won't be relevant.
         this.isTargetingNative() ? this.getNativeRuntimeUrl() : this.getDevServerUrl({
             hostType: "localhost"
@@ -202,12 +206,12 @@ class BundlerDevServer {
     }
     /** Stop the running dev server instance. */ async stopAsync() {
         var // Stop file watching.
-        ref4, ref2, ref3;
-        (ref4 = this.notifier) == null ? void 0 : ref4.stopObserving();
+        ref5, ref3, ref4;
+        (ref5 = this.notifier) == null ? void 0 : ref5.stopObserving();
         // Stop the dev session timer and tell Expo API to remove dev session.
-        await ((ref2 = this.devSession) == null ? void 0 : ref2.closeAsync());
+        await ((ref3 = this.devSession) == null ? void 0 : ref3.closeAsync());
         // Stop ngrok if running.
-        await ((ref3 = this.ngrok) == null ? void 0 : ref3.stopAsync().catch((e)=>{
+        await ((ref4 = this.ngrok) == null ? void 0 : ref4.stopAsync().catch((e)=>{
             Log.error(`Error stopping ngrok:`);
             Log.exception(e);
         }));
@@ -277,8 +281,8 @@ class BundlerDevServer {
     }
     /** Get the tunnel URL from ngrok. */ getTunnelUrl() {
         var ref;
-        var ref5;
-        return (ref5 = (ref = this.ngrok) == null ? void 0 : ref.getActiveUrl()) != null ? ref5 : null;
+        var ref6;
+        return (ref6 = (ref = this.ngrok) == null ? void 0 : ref.getActiveUrl()) != null ? ref6 : null;
     }
     /** Open the dev server in a runtime. */ async openPlatformAsync(launchTarget, resolver = {}) {
         if (launchTarget === "desktop") {
diff --git a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map
index 4eeb65a..a3f29fd 100644
--- a/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/BundlerDevServer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/server/BundlerDevServer.ts"],"sourcesContent":["import { MessageSocket } from '@expo/dev-server';\nimport assert from 'assert';\nimport resolveFrom from 'resolve-from';\n\nimport * as Log from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { resolveWithTimeout } from '../../utils/delay';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { openBrowserAsync } from '../../utils/open';\nimport {\n  BaseOpenInCustomProps,\n  BaseResolveDeviceProps,\n  PlatformManager,\n} from '../platforms/PlatformManager';\nimport { AsyncNgrok } from './AsyncNgrok';\nimport { DevelopmentSession } from './DevelopmentSession';\nimport { CreateURLOptions, UrlCreator } from './UrlCreator';\nimport { PlatformBundlers } from './platformBundlers';\n\nconst debug = require('debug')('expo:start:server:devServer') as typeof console.log;\n\nexport type ServerLike = {\n  close(callback?: (err?: Error) => void): void;\n  addListener?(event: string, listener: (...args: any[]) => void): unknown;\n};\n\nexport type DevServerInstance = {\n  /** Bundler dev server instance. */\n  server: ServerLike;\n  /** Dev server URL location properties. */\n  location: {\n    url: string;\n    port: number;\n    protocol: 'http' | 'https';\n    host?: string;\n  };\n  /** Additional middleware that's attached to the `server`. */\n  middleware: any;\n  /** Message socket for communicating with the runtime. */\n  messageSocket: MessageSocket;\n};\n\nexport interface BundlerStartOptions {\n  /** Should the dev server use `https` protocol. */\n  https?: boolean;\n  /** Should start the dev servers in development mode (minify). */\n  mode?: 'development' | 'production';\n  /** Is dev client enabled. */\n  devClient?: boolean;\n  /** Should run dev servers with clean caches. */\n  resetDevServer?: boolean;\n  /** Which manifest type to serve. */\n  forceManifestType?: 'expo-updates' | 'classic';\n  /** Code signing private key path (defaults to same directory as certificate) */\n  privateKeyPath?: string;\n\n  /** Max amount of workers (threads) to use with Metro bundler, defaults to undefined for max workers. */\n  maxWorkers?: number;\n  /** Port to start the dev server on. */\n  port?: number;\n\n  /** Should start a headless dev server e.g. mock representation to approximate info from a server running in a different process. */\n  headless?: boolean;\n  /** Should instruct the bundler to create minified bundles. */\n  minify?: boolean;\n\n  // Webpack options\n  /** Should modify and create PWA icons. */\n  isImageEditingEnabled?: boolean;\n\n  location: CreateURLOptions;\n}\n\nconst PLATFORM_MANAGERS = {\n  simulator: () =>\n    require('../platforms/ios/ApplePlatformManager')\n      .ApplePlatformManager as typeof import('../platforms/ios/ApplePlatformManager').ApplePlatformManager,\n  emulator: () =>\n    require('../platforms/android/AndroidPlatformManager')\n      .AndroidPlatformManager as typeof import('../platforms/android/AndroidPlatformManager').AndroidPlatformManager,\n};\n\nconst MIDDLEWARES = {\n  classic: () =>\n    require('./middleware/ClassicManifestMiddleware')\n      .ClassicManifestMiddleware as typeof import('./middleware/ClassicManifestMiddleware').ClassicManifestMiddleware,\n  'expo-updates': () =>\n    require('./middleware/ExpoGoManifestHandlerMiddleware')\n      .ExpoGoManifestHandlerMiddleware as typeof import('./middleware/ExpoGoManifestHandlerMiddleware').ExpoGoManifestHandlerMiddleware,\n};\n\nexport abstract class BundlerDevServer {\n  /** Name of the bundler. */\n  abstract get name(): string;\n\n  /** Ngrok instance for managing tunnel connections. */\n  protected ngrok: AsyncNgrok | null = null;\n  /** Interfaces with the Expo 'Development Session' API. */\n  protected devSession: DevelopmentSession | null = null;\n  /** Http server and related info. */\n  protected instance: DevServerInstance | null = null;\n  /** Native platform interfaces for opening projects.  */\n  private platformManagers: Record<string, PlatformManager<any>> = {};\n  /** Manages the creation of dev server URLs. */\n  protected urlCreator?: UrlCreator | null = null;\n\n  private notifier: FileNotifier | null = null;\n\n  constructor(\n    /** Project root folder. */\n    public projectRoot: string,\n    /** A mapping of bundlers to platforms. */\n    public platformBundlers: PlatformBundlers,\n    // TODO: Replace with custom scheme maybe...\n    public isDevClient?: boolean\n  ) {}\n\n  protected setInstance(instance: DevServerInstance) {\n    this.instance = instance;\n  }\n\n  /** Get the manifest middleware function. */\n  protected async getManifestMiddlewareAsync(\n    options: Pick<\n      BundlerStartOptions,\n      'minify' | 'mode' | 'forceManifestType' | 'privateKeyPath'\n    > = {}\n  ) {\n    const manifestType = options.forceManifestType || 'classic';\n    assert(manifestType in MIDDLEWARES, `Manifest middleware for type '${manifestType}' not found`);\n    const Middleware = MIDDLEWARES[manifestType]();\n\n    const urlCreator = this.getUrlCreator();\n    const middleware = new Middleware(this.projectRoot, {\n      constructUrl: urlCreator.constructUrl.bind(urlCreator),\n      mode: options.mode,\n      minify: options.minify,\n      isNativeWebpack: this.name === 'webpack' && this.isTargetingNative(),\n      privateKeyPath: options.privateKeyPath,\n    });\n    return middleware;\n  }\n\n  /** Start the dev server using settings defined in the start command. */\n  public async startAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    await this.stopAsync();\n\n    let instance: DevServerInstance;\n    if (options.headless) {\n      instance = await this.startHeadlessAsync(options);\n    } else {\n      instance = await this.startImplementationAsync(options);\n    }\n\n    this.setInstance(instance);\n    await this.postStartAsync(options);\n    return instance;\n  }\n\n  protected abstract startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance>;\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    return false;\n  }\n\n  public abstract startTypeScriptServices(): Promise<void>;\n\n  public async watchEnvironmentVariables(): Promise<void> {\n    // noop -- We've only implemented this functionality in Metro.\n  }\n\n  /**\n   * Creates a mock server representation that can be used to estimate URLs for a server started in another process.\n   * This is used for the run commands where you can reuse the server from a previous run.\n   */\n  private async startHeadlessAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    if (!options.port)\n      throw new CommandError('HEADLESS_SERVER', 'headless dev server requires a port option');\n    this.urlCreator = this.getUrlCreator(options);\n\n    return {\n      // Create a mock server\n      server: {\n        close: () => {\n          this.instance = null;\n        },\n        addListener() {},\n      },\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware: {},\n      messageSocket: {\n        broadcast: () => {\n          throw new CommandError('HEADLESS_SERVER', 'Cannot broadcast messages to headless server');\n        },\n      },\n    };\n  }\n\n  /**\n   * Runs after the `startAsync` function, performing any additional common operations.\n   * You can assume the dev server is started by the time this function is called.\n   */\n  protected async postStartAsync(options: BundlerStartOptions) {\n    if (\n      options.location.hostType === 'tunnel' &&\n      !env.EXPO_OFFLINE &&\n      // This is a hack to prevent using tunnel on web since we block it upstream for some reason.\n      this.isTargetingNative()\n    ) {\n      await this._startTunnelAsync();\n    }\n    await this.startDevSessionAsync();\n\n    this.watchConfig();\n  }\n\n  protected abstract getConfigModuleIds(): string[];\n\n  protected watchConfig() {\n    this.notifier?.stopObserving();\n    this.notifier = new FileNotifier(this.projectRoot, this.getConfigModuleIds());\n    this.notifier.startObserving();\n  }\n\n  /** Create ngrok instance and start the tunnel server. Exposed for testing. */\n  public async _startTunnelAsync(): Promise<AsyncNgrok | null> {\n    const port = this.getInstance()?.location.port;\n    if (!port) return null;\n    debug('[ngrok] connect to port: ' + port);\n    this.ngrok = new AsyncNgrok(this.projectRoot, port);\n    await this.ngrok.startAsync();\n    return this.ngrok;\n  }\n\n  protected async startDevSessionAsync() {\n    // This is used to make Expo Go open the project in either Expo Go, or the web browser.\n    // Must come after ngrok (`startTunnelAsync`) setup.\n    this.devSession?.stopNotifying?.();\n    this.devSession = new DevelopmentSession(\n      this.projectRoot,\n      // This URL will be used on external devices so the computer IP won't be relevant.\n      this.isTargetingNative()\n        ? this.getNativeRuntimeUrl()\n        : this.getDevServerUrl({ hostType: 'localhost' }),\n      () => {\n        // TODO: This appears to be happening consistently after an hour.\n        // We should investigate why this is happening and fix it on our servers.\n        // Log.error(\n        //   chalk.red(\n        //     '\\nAn unexpected error occurred while updating the Dev Session API. This project will not appear in the \"Development servers\" section of the Expo Go app until this process has been restarted.'\n        //   )\n        // );\n        // Log.exception(error);\n        this.devSession?.closeAsync().catch((error) => {\n          debug('[dev-session] error closing: ' + error.message);\n        });\n      }\n    );\n\n    await this.devSession.startAsync({\n      runtime: this.isTargetingNative() ? 'native' : 'web',\n    });\n  }\n\n  public isTargetingNative() {\n    // Temporary hack while we implement multi-bundler dev server proxy.\n    return true;\n  }\n\n  public isTargetingWeb() {\n    return this.platformBundlers.web === this.name;\n  }\n\n  /**\n   * Sends a message over web sockets to any connected device,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params\n   */\n  public broadcastMessage(\n    method: 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ) {\n    this.getInstance()?.messageSocket.broadcast(method, params);\n  }\n\n  /** Get the running dev server instance. */\n  public getInstance() {\n    return this.instance;\n  }\n\n  /** Stop the running dev server instance. */\n  async stopAsync() {\n    // Stop file watching.\n    this.notifier?.stopObserving();\n\n    // Stop the dev session timer and tell Expo API to remove dev session.\n    await this.devSession?.closeAsync();\n\n    // Stop ngrok if running.\n    await this.ngrok?.stopAsync().catch((e) => {\n      Log.error(`Error stopping ngrok:`);\n      Log.exception(e);\n    });\n\n    return resolveWithTimeout(\n      () =>\n        new Promise<void>((resolve, reject) => {\n          // Close the server.\n          debug(`Stopping dev server (bundler: ${this.name})`);\n\n          if (this.instance?.server) {\n            this.instance.server.close((error) => {\n              debug(`Stopped dev server (bundler: ${this.name})`);\n              this.instance = null;\n              if (error) {\n                reject(error);\n              } else {\n                resolve();\n              }\n            });\n          } else {\n            debug(`Stopped dev server (bundler: ${this.name})`);\n            this.instance = null;\n            resolve();\n          }\n        }),\n      {\n        // NOTE(Bacon): Metro dev server doesn't seem to be closing in time.\n        timeout: 1000,\n        errorMessage: `Timeout waiting for '${this.name}' dev server to close`,\n      }\n    );\n  }\n\n  public getUrlCreator(options: Partial<Pick<BundlerStartOptions, 'port' | 'location'>> = {}) {\n    if (!this.urlCreator) {\n      assert(options?.port, 'Dev server instance not found');\n      this.urlCreator = new UrlCreator(options.location, {\n        port: options.port,\n        getTunnelUrl: this.getTunnelUrl.bind(this),\n      });\n    }\n    return this.urlCreator;\n  }\n\n  public getNativeRuntimeUrl(opts: Partial<CreateURLOptions> = {}) {\n    return this.isDevClient\n      ? this.getUrlCreator().constructDevClientUrl(opts) ?? this.getDevServerUrl()\n      : this.getUrlCreator().constructUrl({ ...opts, scheme: 'exp' });\n  }\n\n  /** Get the URL for the running instance of the dev server. */\n  public getDevServerUrl(options: { hostType?: 'localhost' } = {}): string | null {\n    const instance = this.getInstance();\n    if (!instance?.location) {\n      return null;\n    }\n    const { location } = instance;\n    if (options.hostType === 'localhost') {\n      return `${location.protocol}://localhost:${location.port}`;\n    }\n    return location.url ?? null;\n  }\n\n  /** Get the base URL for JS inspector */\n  public getJsInspectorBaseUrl(): string {\n    if (this.name !== 'metro') {\n      throw new CommandError(\n        'DEV_SERVER',\n        `Cannot get the JS inspector base url - bundler[${this.name}]`\n      );\n    }\n    return this.getUrlCreator().constructUrl({ scheme: 'http' });\n  }\n\n  /** Get the tunnel URL from ngrok. */\n  public getTunnelUrl(): string | null {\n    return this.ngrok?.getActiveUrl() ?? null;\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openPlatformAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS | 'desktop',\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    if (launchTarget === 'desktop') {\n      const serverUrl = this.getDevServerUrl({ hostType: 'localhost' });\n      // Allow opening the tunnel URL when using Metro web.\n      const url = this.name === 'metro' ? this.getTunnelUrl() ?? serverUrl : serverUrl;\n      await openBrowserAsync(url!);\n      return { url };\n    }\n\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime }, resolver);\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openCustomRuntimeAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS,\n    launchProps: Partial<BaseOpenInCustomProps> = {},\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    if (runtime !== 'custom') {\n      throw new CommandError(\n        `dev server cannot open custom runtimes either because it does not target native platforms or because it is not targeting dev clients. (target: ${runtime})`\n      );\n    }\n\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime: 'custom', props: launchProps }, resolver);\n  }\n\n  /** Get the URL for opening in Expo Go. */\n  protected getExpoGoUrl(): string {\n    return this.getUrlCreator().constructUrl({ scheme: 'exp' });\n  }\n\n  /** Should use the interstitial page for selecting which runtime to use. */\n  protected isRedirectPageEnabled(): boolean {\n    return (\n      !env.EXPO_NO_REDIRECT_PAGE &&\n      // if user passed --dev-client flag, skip interstitial page\n      !this.isDevClient &&\n      // Checks if dev client is installed.\n      !!resolveFrom.silent(this.projectRoot, 'expo-dev-client')\n    );\n  }\n\n  /** Get the redirect URL when redirecting is enabled. */\n  public getRedirectUrl(platform: keyof typeof PLATFORM_MANAGERS | null = null): string | null {\n    if (!this.isRedirectPageEnabled()) {\n      debug('Redirect page is disabled');\n      return null;\n    }\n\n    return (\n      this.getUrlCreator().constructLoadingUrl(\n        {},\n        platform === 'emulator' ? 'android' : platform === 'simulator' ? 'ios' : null\n      ) ?? null\n    );\n  }\n\n  public getReactDevToolsUrl(): string {\n    return new URL(\n      '_expo/react-devtools',\n      this.getUrlCreator().constructUrl({ scheme: 'http' })\n    ).toString();\n  }\n\n  protected async getPlatformManagerAsync(platform: keyof typeof PLATFORM_MANAGERS) {\n    if (!this.platformManagers[platform]) {\n      const Manager = PLATFORM_MANAGERS[platform]();\n      const port = this.getInstance()?.location.port;\n      if (!port || !this.urlCreator) {\n        throw new CommandError(\n          'DEV_SERVER',\n          'Cannot interact with native platforms until dev server has started'\n        );\n      }\n      debug(`Creating platform manager (platform: ${platform}, port: ${port})`);\n      this.platformManagers[platform] = new Manager(this.projectRoot, port, {\n        getCustomRuntimeUrl: this.urlCreator.constructDevClientUrl.bind(this.urlCreator),\n        getExpoGoUrl: this.getExpoGoUrl.bind(this),\n        getRedirectUrl: this.getRedirectUrl.bind(this, platform),\n        getDevServerUrl: this.getDevServerUrl.bind(this, { hostType: 'localhost' }),\n      });\n    }\n    return this.platformManagers[platform];\n  }\n}\n"],"names":["Log","debug","require","PLATFORM_MANAGERS","simulator","ApplePlatformManager","emulator","AndroidPlatformManager","MIDDLEWARES","classic","ClassicManifestMiddleware","ExpoGoManifestHandlerMiddleware","BundlerDevServer","constructor","projectRoot","platformBundlers","isDevClient","ngrok","devSession","instance","platformManagers","urlCreator","notifier","setInstance","getManifestMiddlewareAsync","options","manifestType","forceManifestType","assert","Middleware","getUrlCreator","middleware","constructUrl","bind","mode","minify","isNativeWebpack","name","isTargetingNative","privateKeyPath","startAsync","stopAsync","headless","startHeadlessAsync","startImplementationAsync","postStartAsync","waitForTypeScriptAsync","watchEnvironmentVariables","port","CommandError","server","close","addListener","location","host","url","protocol","messageSocket","broadcast","hostType","env","EXPO_OFFLINE","_startTunnelAsync","startDevSessionAsync","watchConfig","stopObserving","FileNotifier","getConfigModuleIds","startObserving","getInstance","AsyncNgrok","stopNotifying","DevelopmentSession","getNativeRuntimeUrl","getDevServerUrl","closeAsync","catch","error","message","runtime","isTargetingWeb","web","broadcastMessage","method","params","e","exception","resolveWithTimeout","Promise","resolve","reject","timeout","errorMessage","UrlCreator","getTunnelUrl","opts","constructDevClientUrl","scheme","getJsInspectorBaseUrl","getActiveUrl","openPlatformAsync","launchTarget","resolver","serverUrl","openBrowserAsync","manager","getPlatformManagerAsync","openAsync","openCustomRuntimeAsync","launchProps","props","getExpoGoUrl","isRedirectPageEnabled","EXPO_NO_REDIRECT_PAGE","resolveFrom","silent","getRedirectUrl","platform","constructLoadingUrl","getReactDevToolsUrl","URL","toString","Manager","getCustomRuntimeUrl"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/server/BundlerDevServer.ts"],"sourcesContent":["import { MessageSocket } from '@expo/dev-server';\nimport assert from 'assert';\nimport resolveFrom from 'resolve-from';\n\nimport DevToolsPluginManager from './DevToolsPluginManager';\nimport * as Log from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { resolveWithTimeout } from '../../utils/delay';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { openBrowserAsync } from '../../utils/open';\nimport {\n  BaseOpenInCustomProps,\n  BaseResolveDeviceProps,\n  PlatformManager,\n} from '../platforms/PlatformManager';\nimport { AsyncNgrok } from './AsyncNgrok';\nimport { DevelopmentSession } from './DevelopmentSession';\nimport { CreateURLOptions, UrlCreator } from './UrlCreator';\nimport { PlatformBundlers } from './platformBundlers';\n\nconst debug = require('debug')('expo:start:server:devServer') as typeof console.log;\n\nexport type ServerLike = {\n  close(callback?: (err?: Error) => void): void;\n  addListener?(event: string, listener: (...args: any[]) => void): unknown;\n};\n\nexport type DevServerInstance = {\n  /** Bundler dev server instance. */\n  server: ServerLike;\n  /** Dev server URL location properties. */\n  location: {\n    url: string;\n    port: number;\n    protocol: 'http' | 'https';\n    host?: string;\n  };\n  /** Additional middleware that's attached to the `server`. */\n  middleware: any;\n  /** Message socket for communicating with the runtime. */\n  messageSocket: MessageSocket;\n};\n\nexport interface BundlerStartOptions {\n  /** Should the dev server use `https` protocol. */\n  https?: boolean;\n  /** Should start the dev servers in development mode (minify). */\n  mode?: 'development' | 'production';\n  /** Is dev client enabled. */\n  devClient?: boolean;\n  /** Should run dev servers with clean caches. */\n  resetDevServer?: boolean;\n  /** Which manifest type to serve. */\n  forceManifestType?: 'expo-updates' | 'classic';\n  /** Code signing private key path (defaults to same directory as certificate) */\n  privateKeyPath?: string;\n\n  /** Max amount of workers (threads) to use with Metro bundler, defaults to undefined for max workers. */\n  maxWorkers?: number;\n  /** Port to start the dev server on. */\n  port?: number;\n\n  /** Should start a headless dev server e.g. mock representation to approximate info from a server running in a different process. */\n  headless?: boolean;\n  /** Should instruct the bundler to create minified bundles. */\n  minify?: boolean;\n\n  // Webpack options\n  /** Should modify and create PWA icons. */\n  isImageEditingEnabled?: boolean;\n\n  location: CreateURLOptions;\n}\n\nconst PLATFORM_MANAGERS = {\n  simulator: () =>\n    require('../platforms/ios/ApplePlatformManager')\n      .ApplePlatformManager as typeof import('../platforms/ios/ApplePlatformManager').ApplePlatformManager,\n  emulator: () =>\n    require('../platforms/android/AndroidPlatformManager')\n      .AndroidPlatformManager as typeof import('../platforms/android/AndroidPlatformManager').AndroidPlatformManager,\n};\n\nconst MIDDLEWARES = {\n  classic: () =>\n    require('./middleware/ClassicManifestMiddleware')\n      .ClassicManifestMiddleware as typeof import('./middleware/ClassicManifestMiddleware').ClassicManifestMiddleware,\n  'expo-updates': () =>\n    require('./middleware/ExpoGoManifestHandlerMiddleware')\n      .ExpoGoManifestHandlerMiddleware as typeof import('./middleware/ExpoGoManifestHandlerMiddleware').ExpoGoManifestHandlerMiddleware,\n};\n\nexport abstract class BundlerDevServer {\n  /** Name of the bundler. */\n  abstract get name(): string;\n\n  /** Ngrok instance for managing tunnel connections. */\n  protected ngrok: AsyncNgrok | null = null;\n  /** Interfaces with the Expo 'Development Session' API. */\n  protected devSession: DevelopmentSession | null = null;\n  /** Http server and related info. */\n  protected instance: DevServerInstance | null = null;\n  /** Native platform interfaces for opening projects.  */\n  private platformManagers: Record<string, PlatformManager<any>> = {};\n  /** Manages the creation of dev server URLs. */\n  protected urlCreator?: UrlCreator | null = null;\n\n  private notifier: FileNotifier | null = null;\n  protected readonly devToolsPluginManager: DevToolsPluginManager;\n  public isDevClient: boolean;\n\n  constructor(\n    /** Project root folder. */\n    public projectRoot: string,\n    /** A mapping of bundlers to platforms. */\n    public platformBundlers: PlatformBundlers,\n    /** Advanced options */\n    options?: {\n      /**\n       * The instance of DevToolsPluginManager\n       * @default new DevToolsPluginManager(projectRoot)\n       */\n      devToolsPluginManager?: DevToolsPluginManager;\n      // TODO: Replace with custom scheme maybe...\n      isDevClient?: boolean;\n    }\n  ) {\n    this.devToolsPluginManager =\n      options?.devToolsPluginManager ?? new DevToolsPluginManager(projectRoot);\n    this.isDevClient = options?.isDevClient ?? false;\n  }\n\n  protected setInstance(instance: DevServerInstance) {\n    this.instance = instance;\n  }\n\n  /** Get the manifest middleware function. */\n  protected async getManifestMiddlewareAsync(\n    options: Pick<\n      BundlerStartOptions,\n      'minify' | 'mode' | 'forceManifestType' | 'privateKeyPath'\n    > = {}\n  ) {\n    const manifestType = options.forceManifestType || 'classic';\n    assert(manifestType in MIDDLEWARES, `Manifest middleware for type '${manifestType}' not found`);\n    const Middleware = MIDDLEWARES[manifestType]();\n\n    const urlCreator = this.getUrlCreator();\n    const middleware = new Middleware(this.projectRoot, {\n      constructUrl: urlCreator.constructUrl.bind(urlCreator),\n      mode: options.mode,\n      minify: options.minify,\n      isNativeWebpack: this.name === 'webpack' && this.isTargetingNative(),\n      privateKeyPath: options.privateKeyPath,\n    });\n    return middleware;\n  }\n\n  /** Start the dev server using settings defined in the start command. */\n  public async startAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    await this.stopAsync();\n\n    let instance: DevServerInstance;\n    if (options.headless) {\n      instance = await this.startHeadlessAsync(options);\n    } else {\n      instance = await this.startImplementationAsync(options);\n    }\n\n    this.setInstance(instance);\n    await this.postStartAsync(options);\n    return instance;\n  }\n\n  protected abstract startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance>;\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    return false;\n  }\n\n  public abstract startTypeScriptServices(): Promise<void>;\n\n  public async watchEnvironmentVariables(): Promise<void> {\n    // noop -- We've only implemented this functionality in Metro.\n  }\n\n  /**\n   * Creates a mock server representation that can be used to estimate URLs for a server started in another process.\n   * This is used for the run commands where you can reuse the server from a previous run.\n   */\n  private async startHeadlessAsync(options: BundlerStartOptions): Promise<DevServerInstance> {\n    if (!options.port)\n      throw new CommandError('HEADLESS_SERVER', 'headless dev server requires a port option');\n    this.urlCreator = this.getUrlCreator(options);\n\n    return {\n      // Create a mock server\n      server: {\n        close: () => {\n          this.instance = null;\n        },\n        addListener() {},\n      },\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware: {},\n      messageSocket: {\n        broadcast: () => {\n          throw new CommandError('HEADLESS_SERVER', 'Cannot broadcast messages to headless server');\n        },\n      },\n    };\n  }\n\n  /**\n   * Runs after the `startAsync` function, performing any additional common operations.\n   * You can assume the dev server is started by the time this function is called.\n   */\n  protected async postStartAsync(options: BundlerStartOptions) {\n    if (\n      options.location.hostType === 'tunnel' &&\n      !env.EXPO_OFFLINE &&\n      // This is a hack to prevent using tunnel on web since we block it upstream for some reason.\n      this.isTargetingNative()\n    ) {\n      await this._startTunnelAsync();\n    }\n    await this.startDevSessionAsync();\n\n    this.watchConfig();\n  }\n\n  protected abstract getConfigModuleIds(): string[];\n\n  protected watchConfig() {\n    this.notifier?.stopObserving();\n    this.notifier = new FileNotifier(this.projectRoot, this.getConfigModuleIds());\n    this.notifier.startObserving();\n  }\n\n  /** Create ngrok instance and start the tunnel server. Exposed for testing. */\n  public async _startTunnelAsync(): Promise<AsyncNgrok | null> {\n    const port = this.getInstance()?.location.port;\n    if (!port) return null;\n    debug('[ngrok] connect to port: ' + port);\n    this.ngrok = new AsyncNgrok(this.projectRoot, port);\n    await this.ngrok.startAsync();\n    return this.ngrok;\n  }\n\n  protected async startDevSessionAsync() {\n    // This is used to make Expo Go open the project in either Expo Go, or the web browser.\n    // Must come after ngrok (`startTunnelAsync`) setup.\n    this.devSession?.stopNotifying?.();\n    this.devSession = new DevelopmentSession(\n      this.projectRoot,\n      // This URL will be used on external devices so the computer IP won't be relevant.\n      this.isTargetingNative()\n        ? this.getNativeRuntimeUrl()\n        : this.getDevServerUrl({ hostType: 'localhost' }),\n      () => {\n        // TODO: This appears to be happening consistently after an hour.\n        // We should investigate why this is happening and fix it on our servers.\n        // Log.error(\n        //   chalk.red(\n        //     '\\nAn unexpected error occurred while updating the Dev Session API. This project will not appear in the \"Development servers\" section of the Expo Go app until this process has been restarted.'\n        //   )\n        // );\n        // Log.exception(error);\n        this.devSession?.closeAsync().catch((error) => {\n          debug('[dev-session] error closing: ' + error.message);\n        });\n      }\n    );\n\n    await this.devSession.startAsync({\n      runtime: this.isTargetingNative() ? 'native' : 'web',\n    });\n  }\n\n  public isTargetingNative() {\n    // Temporary hack while we implement multi-bundler dev server proxy.\n    return true;\n  }\n\n  public isTargetingWeb() {\n    return this.platformBundlers.web === this.name;\n  }\n\n  /**\n   * Sends a message over web sockets to any connected device,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params\n   */\n  public broadcastMessage(\n    method: 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ) {\n    this.getInstance()?.messageSocket.broadcast(method, params);\n  }\n\n  /** Get the running dev server instance. */\n  public getInstance() {\n    return this.instance;\n  }\n\n  /** Stop the running dev server instance. */\n  async stopAsync() {\n    // Stop file watching.\n    this.notifier?.stopObserving();\n\n    // Stop the dev session timer and tell Expo API to remove dev session.\n    await this.devSession?.closeAsync();\n\n    // Stop ngrok if running.\n    await this.ngrok?.stopAsync().catch((e) => {\n      Log.error(`Error stopping ngrok:`);\n      Log.exception(e);\n    });\n\n    return resolveWithTimeout(\n      () =>\n        new Promise<void>((resolve, reject) => {\n          // Close the server.\n          debug(`Stopping dev server (bundler: ${this.name})`);\n\n          if (this.instance?.server) {\n            this.instance.server.close((error) => {\n              debug(`Stopped dev server (bundler: ${this.name})`);\n              this.instance = null;\n              if (error) {\n                reject(error);\n              } else {\n                resolve();\n              }\n            });\n          } else {\n            debug(`Stopped dev server (bundler: ${this.name})`);\n            this.instance = null;\n            resolve();\n          }\n        }),\n      {\n        // NOTE(Bacon): Metro dev server doesn't seem to be closing in time.\n        timeout: 1000,\n        errorMessage: `Timeout waiting for '${this.name}' dev server to close`,\n      }\n    );\n  }\n\n  public getUrlCreator(options: Partial<Pick<BundlerStartOptions, 'port' | 'location'>> = {}) {\n    if (!this.urlCreator) {\n      assert(options?.port, 'Dev server instance not found');\n      this.urlCreator = new UrlCreator(options.location, {\n        port: options.port,\n        getTunnelUrl: this.getTunnelUrl.bind(this),\n      });\n    }\n    return this.urlCreator;\n  }\n\n  public getNativeRuntimeUrl(opts: Partial<CreateURLOptions> = {}) {\n    return this.isDevClient\n      ? this.getUrlCreator().constructDevClientUrl(opts) ?? this.getDevServerUrl()\n      : this.getUrlCreator().constructUrl({ ...opts, scheme: 'exp' });\n  }\n\n  /** Get the URL for the running instance of the dev server. */\n  public getDevServerUrl(options: { hostType?: 'localhost' } = {}): string | null {\n    const instance = this.getInstance();\n    if (!instance?.location) {\n      return null;\n    }\n    const { location } = instance;\n    if (options.hostType === 'localhost') {\n      return `${location.protocol}://localhost:${location.port}`;\n    }\n    return location.url ?? null;\n  }\n\n  /** Get the base URL for JS inspector */\n  public getJsInspectorBaseUrl(): string {\n    if (this.name !== 'metro') {\n      throw new CommandError(\n        'DEV_SERVER',\n        `Cannot get the JS inspector base url - bundler[${this.name}]`\n      );\n    }\n    return this.getUrlCreator().constructUrl({ scheme: 'http' });\n  }\n\n  /** Get the tunnel URL from ngrok. */\n  public getTunnelUrl(): string | null {\n    return this.ngrok?.getActiveUrl() ?? null;\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openPlatformAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS | 'desktop',\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    if (launchTarget === 'desktop') {\n      const serverUrl = this.getDevServerUrl({ hostType: 'localhost' });\n      // Allow opening the tunnel URL when using Metro web.\n      const url = this.name === 'metro' ? this.getTunnelUrl() ?? serverUrl : serverUrl;\n      await openBrowserAsync(url!);\n      return { url };\n    }\n\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime }, resolver);\n  }\n\n  /** Open the dev server in a runtime. */\n  public async openCustomRuntimeAsync(\n    launchTarget: keyof typeof PLATFORM_MANAGERS,\n    launchProps: Partial<BaseOpenInCustomProps> = {},\n    resolver: BaseResolveDeviceProps<any> = {}\n  ) {\n    const runtime = this.isTargetingNative() ? (this.isDevClient ? 'custom' : 'expo') : 'web';\n    if (runtime !== 'custom') {\n      throw new CommandError(\n        `dev server cannot open custom runtimes either because it does not target native platforms or because it is not targeting dev clients. (target: ${runtime})`\n      );\n    }\n\n    const manager = await this.getPlatformManagerAsync(launchTarget);\n    return manager.openAsync({ runtime: 'custom', props: launchProps }, resolver);\n  }\n\n  /** Get the URL for opening in Expo Go. */\n  protected getExpoGoUrl(): string {\n    return this.getUrlCreator().constructUrl({ scheme: 'exp' });\n  }\n\n  /** Should use the interstitial page for selecting which runtime to use. */\n  protected isRedirectPageEnabled(): boolean {\n    return (\n      !env.EXPO_NO_REDIRECT_PAGE &&\n      // if user passed --dev-client flag, skip interstitial page\n      !this.isDevClient &&\n      // Checks if dev client is installed.\n      !!resolveFrom.silent(this.projectRoot, 'expo-dev-client')\n    );\n  }\n\n  /** Get the redirect URL when redirecting is enabled. */\n  public getRedirectUrl(platform: keyof typeof PLATFORM_MANAGERS | null = null): string | null {\n    if (!this.isRedirectPageEnabled()) {\n      debug('Redirect page is disabled');\n      return null;\n    }\n\n    return (\n      this.getUrlCreator().constructLoadingUrl(\n        {},\n        platform === 'emulator' ? 'android' : platform === 'simulator' ? 'ios' : null\n      ) ?? null\n    );\n  }\n\n  public getReactDevToolsUrl(): string {\n    return new URL(\n      '_expo/react-devtools',\n      this.getUrlCreator().constructUrl({ scheme: 'http' })\n    ).toString();\n  }\n\n  protected async getPlatformManagerAsync(platform: keyof typeof PLATFORM_MANAGERS) {\n    if (!this.platformManagers[platform]) {\n      const Manager = PLATFORM_MANAGERS[platform]();\n      const port = this.getInstance()?.location.port;\n      if (!port || !this.urlCreator) {\n        throw new CommandError(\n          'DEV_SERVER',\n          'Cannot interact with native platforms until dev server has started'\n        );\n      }\n      debug(`Creating platform manager (platform: ${platform}, port: ${port})`);\n      this.platformManagers[platform] = new Manager(this.projectRoot, port, {\n        getCustomRuntimeUrl: this.urlCreator.constructDevClientUrl.bind(this.urlCreator),\n        getExpoGoUrl: this.getExpoGoUrl.bind(this),\n        getRedirectUrl: this.getRedirectUrl.bind(this, platform),\n        getDevServerUrl: this.getDevServerUrl.bind(this, { hostType: 'localhost' }),\n      });\n    }\n    return this.platformManagers[platform];\n  }\n}\n"],"names":["Log","debug","require","PLATFORM_MANAGERS","simulator","ApplePlatformManager","emulator","AndroidPlatformManager","MIDDLEWARES","classic","ClassicManifestMiddleware","ExpoGoManifestHandlerMiddleware","BundlerDevServer","constructor","projectRoot","platformBundlers","options","ngrok","devSession","instance","platformManagers","urlCreator","notifier","devToolsPluginManager","DevToolsPluginManager","isDevClient","setInstance","getManifestMiddlewareAsync","manifestType","forceManifestType","assert","Middleware","getUrlCreator","middleware","constructUrl","bind","mode","minify","isNativeWebpack","name","isTargetingNative","privateKeyPath","startAsync","stopAsync","headless","startHeadlessAsync","startImplementationAsync","postStartAsync","waitForTypeScriptAsync","watchEnvironmentVariables","port","CommandError","server","close","addListener","location","host","url","protocol","messageSocket","broadcast","hostType","env","EXPO_OFFLINE","_startTunnelAsync","startDevSessionAsync","watchConfig","stopObserving","FileNotifier","getConfigModuleIds","startObserving","getInstance","AsyncNgrok","stopNotifying","DevelopmentSession","getNativeRuntimeUrl","getDevServerUrl","closeAsync","catch","error","message","runtime","isTargetingWeb","web","broadcastMessage","method","params","e","exception","resolveWithTimeout","Promise","resolve","reject","timeout","errorMessage","UrlCreator","getTunnelUrl","opts","constructDevClientUrl","scheme","getJsInspectorBaseUrl","getActiveUrl","openPlatformAsync","launchTarget","resolver","serverUrl","openBrowserAsync","manager","getPlatformManagerAsync","openAsync","openCustomRuntimeAsync","launchProps","props","getExpoGoUrl","isRedirectPageEnabled","EXPO_NO_REDIRECT_PAGE","resolveFrom","silent","getRedirectUrl","platform","constructLoadingUrl","getReactDevToolsUrl","URL","toString","Manager","getCustomRuntimeUrl"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js
index 1748075..0c3216f 100644
--- a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js
+++ b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js
@@ -5,6 +5,7 @@ Object.defineProperty(exports, "__esModule", {
 var _config = require("@expo/config");
 var _assert = _interopRequireDefault(require("assert"));
 var _chalk = _interopRequireDefault(require("chalk"));
+var _devToolsPluginManager = _interopRequireDefault(require("./DevToolsPluginManager"));
 var _log = require("../../log");
 var _fileNotifier = require("../../utils/FileNotifier");
 var _rudderstackClient = require("../../utils/analytics/rudderstackClient");
@@ -55,6 +56,7 @@ class DevServerManager {
         this.projectPrerequisites = [];
         this.notifier = null;
         this.notifier = this.watchBabelConfig();
+        this.devtoolsPluginManager = new _devToolsPluginManager.default(projectRoot);
     }
     watchBabelConfig() {
         const notifier = new _fileNotifier.FileNotifier(this.projectRoot, [
@@ -158,7 +160,10 @@ class DevServerManager {
         // Start all dev servers...
         for (const { type , options  } of startOptions){
             const BundlerDevServerClass = await BUNDLERS[type]();
-            const server = new BundlerDevServerClass(this.projectRoot, platformBundlers, !!(options == null ? void 0 : options.devClient));
+            const server = new BundlerDevServerClass(this.projectRoot, platformBundlers, {
+                devToolsPluginManager: this.devtoolsPluginManager,
+                isDevClient: !!(options == null ? void 0 : options.devClient)
+            });
             await server.startAsync(options != null ? options : this.options);
             devServers.push(server);
         }
diff --git a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map
index be4db87..5d11cf4 100644
--- a/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/DevServerManager.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/server/DevServerManager.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport { Log } from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { logEventAsync } from '../../utils/analytics/rudderstackClient';\nimport { env } from '../../utils/env';\nimport { ProjectPrerequisite } from '../doctor/Prerequisite';\nimport { TypeScriptProjectPrerequisite } from '../doctor/typescript/TypeScriptProjectPrerequisite';\nimport { printItem } from '../interface/commandsTable';\nimport * as AndroidDebugBridge from '../platforms/android/adb';\nimport { resolveSchemeAsync } from '../resolveOptions';\nimport { BundlerDevServer, BundlerStartOptions } from './BundlerDevServer';\nimport { getPlatformBundlers } from './platformBundlers';\n\nconst debug = require('debug')('expo:start:server:devServerManager') as typeof console.log;\n\nexport type MultiBundlerStartOptions = {\n  type: keyof typeof BUNDLERS;\n  options?: BundlerStartOptions;\n}[];\n\nconst devServers: BundlerDevServer[] = [];\n\nconst BUNDLERS = {\n  webpack: () =>\n    require('./webpack/WebpackBundlerDevServer')\n      .WebpackBundlerDevServer as typeof import('./webpack/WebpackBundlerDevServer').WebpackBundlerDevServer,\n  metro: () =>\n    require('./metro/MetroBundlerDevServer')\n      .MetroBundlerDevServer as typeof import('./metro/MetroBundlerDevServer').MetroBundlerDevServer,\n};\n\n/** Manages interacting with multiple dev servers. */\nexport class DevServerManager {\n  private projectPrerequisites: ProjectPrerequisite<any, void>[] = [];\n\n  private notifier: FileNotifier | null = null;\n\n  constructor(\n    public projectRoot: string,\n    /** Keep track of the original CLI options for bundlers that are started interactively. */\n    public options: BundlerStartOptions\n  ) {\n    this.notifier = this.watchBabelConfig();\n  }\n\n  private watchBabelConfig() {\n    const notifier = new FileNotifier(\n      this.projectRoot,\n      [\n        './babel.config.js',\n        './babel.config.json',\n        './.babelrc.json',\n        './.babelrc',\n        './.babelrc.js',\n      ],\n      {\n        additionalWarning: chalk` You may need to clear the bundler cache with the {bold --clear} flag for your changes to take effect.`,\n      }\n    );\n\n    notifier.startObserving();\n\n    return notifier;\n  }\n\n  /** Lazily load and assert a project-level prerequisite. */\n  async ensureProjectPrerequisiteAsync(PrerequisiteClass: typeof ProjectPrerequisite<any, any>) {\n    let prerequisite = this.projectPrerequisites.find(\n      (prerequisite) => prerequisite instanceof PrerequisiteClass\n    );\n    if (!prerequisite) {\n      prerequisite = new PrerequisiteClass(this.projectRoot);\n      this.projectPrerequisites.push(prerequisite);\n    }\n    return await prerequisite.assertAsync();\n  }\n\n  /**\n   * Sends a message over web sockets to all connected devices,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params extra event info to send over the socket.\n   */\n  broadcastMessage(method: 'reload' | 'devMenu' | 'sendDevCommand', params?: Record<string, any>) {\n    devServers.forEach((server) => {\n      server.broadcastMessage(method, params);\n    });\n  }\n\n  /** Get the port for the dev server (either Webpack or Metro) that is hosting code for React Native runtimes. */\n  getNativeDevServerPort() {\n    const server = devServers.find((server) => server.isTargetingNative());\n    return server?.getInstance()?.location.port ?? null;\n  }\n\n  /** Get the first server that targets web. */\n  getWebDevServer() {\n    const server = devServers.find((server) => server.isTargetingWeb());\n    return server ?? null;\n  }\n\n  getDefaultDevServer(): BundlerDevServer {\n    // Return the first native dev server otherwise return the first dev server.\n    const server = devServers.find((server) => server.isTargetingNative());\n    const defaultServer = server ?? devServers[0];\n    assert(defaultServer, 'No dev servers are running');\n    return defaultServer;\n  }\n\n  async ensureWebDevServerRunningAsync() {\n    const [server] = devServers.filter((server) => server.isTargetingWeb());\n    if (server) {\n      return;\n    }\n    const { exp } = getConfig(this.projectRoot, {\n      skipPlugins: true,\n      skipSDKVersionRequirement: true,\n    });\n    const bundler = getPlatformBundlers(exp).web;\n    debug(`Starting ${bundler} dev server for web`);\n    return this.startAsync([\n      {\n        type: bundler,\n        options: this.options,\n      },\n    ]);\n  }\n\n  /** Switch between Expo Go and Expo Dev Clients. */\n  async toggleRuntimeMode(isUsingDevClient: boolean = !this.options.devClient): Promise<boolean> {\n    const nextMode = isUsingDevClient ? '--dev-client' : '--go';\n    Log.log(printItem(chalk`Switching to {bold ${nextMode}}`));\n\n    const nextScheme = await resolveSchemeAsync(this.projectRoot, {\n      devClient: isUsingDevClient,\n      // NOTE: The custom `--scheme` argument is lost from this point on.\n    });\n\n    this.options.location.scheme = nextScheme;\n    this.options.devClient = isUsingDevClient;\n    for (const devServer of devServers) {\n      devServer.isDevClient = isUsingDevClient;\n      const urlCreator = devServer.getUrlCreator();\n      urlCreator.defaults ??= {};\n      urlCreator.defaults.scheme = nextScheme;\n    }\n\n    debug(`New runtime options (runtime: ${nextMode}):`, this.options);\n    return true;\n  }\n\n  /** Start all dev servers. */\n  async startAsync(startOptions: MultiBundlerStartOptions): Promise<ExpoConfig> {\n    const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n\n    await logEventAsync('Start Project', {\n      sdkVersion: exp.sdkVersion ?? null,\n    });\n\n    const platformBundlers = getPlatformBundlers(exp);\n\n    // Start all dev servers...\n    for (const { type, options } of startOptions) {\n      const BundlerDevServerClass = await BUNDLERS[type]();\n      const server = new BundlerDevServerClass(\n        this.projectRoot,\n        platformBundlers,\n        !!options?.devClient\n      );\n      await server.startAsync(options ?? this.options);\n      devServers.push(server);\n    }\n\n    return exp;\n  }\n\n  async bootstrapTypeScriptAsync() {\n    const typescriptPrerequisite = await this.ensureProjectPrerequisiteAsync(\n      TypeScriptProjectPrerequisite\n    );\n\n    if (env.EXPO_NO_TYPESCRIPT_SETUP) {\n      return;\n    }\n\n    // Optionally, wait for the user to add TypeScript during the\n    // development cycle.\n    const server = devServers.find((server) => server.name === 'metro');\n    if (!server) {\n      return;\n    }\n\n    if (!typescriptPrerequisite) {\n      server.waitForTypeScriptAsync().then(async (success) => {\n        if (success) {\n          await server.startTypeScriptServices();\n        }\n      });\n    } else {\n      server.startTypeScriptServices();\n    }\n  }\n\n  async watchEnvironmentVariables() {\n    await devServers.find((server) => server.name === 'metro')?.watchEnvironmentVariables();\n  }\n\n  /** Stop all servers including ADB. */\n  async stopAsync(): Promise<void> {\n    await Promise.allSettled([\n      this.notifier?.stopObserving(),\n      // Stop all dev servers\n      ...devServers.map((server) => server.stopAsync()),\n      // Stop ADB\n      AndroidDebugBridge.getServer().stopAsync(),\n    ]);\n  }\n}\n"],"names":["AndroidDebugBridge","urlCreator","debug","require","devServers","BUNDLERS","webpack","WebpackBundlerDevServer","metro","MetroBundlerDevServer","DevServerManager","constructor","projectRoot","options","projectPrerequisites","notifier","watchBabelConfig","FileNotifier","additionalWarning","chalk","startObserving","ensureProjectPrerequisiteAsync","PrerequisiteClass","prerequisite","find","push","assertAsync","broadcastMessage","method","params","forEach","server","getNativeDevServerPort","isTargetingNative","getInstance","location","port","getWebDevServer","isTargetingWeb","getDefaultDevServer","defaultServer","assert","ensureWebDevServerRunningAsync","filter","exp","getConfig","skipPlugins","skipSDKVersionRequirement","bundler","getPlatformBundlers","web","startAsync","type","toggleRuntimeMode","isUsingDevClient","devClient","nextMode","Log","log","printItem","nextScheme","resolveSchemeAsync","scheme","devServer","isDevClient","getUrlCreator","defaults","startOptions","logEventAsync","sdkVersion","platformBundlers","BundlerDevServerClass","bootstrapTypeScriptAsync","typescriptPrerequisite","TypeScriptProjectPrerequisite","env","EXPO_NO_TYPESCRIPT_SETUP","name","waitForTypeScriptAsync","then","success","startTypeScriptServices","watchEnvironmentVariables","stopAsync","Promise","allSettled","stopObserving","map","getServer"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/server/DevServerManager.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\n\nimport DevToolsPluginManager from './DevToolsPluginManager';\nimport { Log } from '../../log';\nimport { FileNotifier } from '../../utils/FileNotifier';\nimport { logEventAsync } from '../../utils/analytics/rudderstackClient';\nimport { env } from '../../utils/env';\nimport { ProjectPrerequisite } from '../doctor/Prerequisite';\nimport { TypeScriptProjectPrerequisite } from '../doctor/typescript/TypeScriptProjectPrerequisite';\nimport { printItem } from '../interface/commandsTable';\nimport * as AndroidDebugBridge from '../platforms/android/adb';\nimport { resolveSchemeAsync } from '../resolveOptions';\nimport { BundlerDevServer, BundlerStartOptions } from './BundlerDevServer';\nimport { getPlatformBundlers } from './platformBundlers';\n\nconst debug = require('debug')('expo:start:server:devServerManager') as typeof console.log;\n\nexport type MultiBundlerStartOptions = {\n  type: keyof typeof BUNDLERS;\n  options?: BundlerStartOptions;\n}[];\n\nconst devServers: BundlerDevServer[] = [];\n\nconst BUNDLERS = {\n  webpack: () =>\n    require('./webpack/WebpackBundlerDevServer')\n      .WebpackBundlerDevServer as typeof import('./webpack/WebpackBundlerDevServer').WebpackBundlerDevServer,\n  metro: () =>\n    require('./metro/MetroBundlerDevServer')\n      .MetroBundlerDevServer as typeof import('./metro/MetroBundlerDevServer').MetroBundlerDevServer,\n};\n\n/** Manages interacting with multiple dev servers. */\nexport class DevServerManager {\n  private projectPrerequisites: ProjectPrerequisite<any, void>[] = [];\n  public readonly devtoolsPluginManager: DevToolsPluginManager;\n\n  private notifier: FileNotifier | null = null;\n\n  constructor(\n    public projectRoot: string,\n    /** Keep track of the original CLI options for bundlers that are started interactively. */\n    public options: BundlerStartOptions\n  ) {\n    this.notifier = this.watchBabelConfig();\n    this.devtoolsPluginManager = new DevToolsPluginManager(projectRoot);\n  }\n\n  private watchBabelConfig() {\n    const notifier = new FileNotifier(\n      this.projectRoot,\n      [\n        './babel.config.js',\n        './babel.config.json',\n        './.babelrc.json',\n        './.babelrc',\n        './.babelrc.js',\n      ],\n      {\n        additionalWarning: chalk` You may need to clear the bundler cache with the {bold --clear} flag for your changes to take effect.`,\n      }\n    );\n\n    notifier.startObserving();\n\n    return notifier;\n  }\n\n  /** Lazily load and assert a project-level prerequisite. */\n  async ensureProjectPrerequisiteAsync(PrerequisiteClass: typeof ProjectPrerequisite<any, any>) {\n    let prerequisite = this.projectPrerequisites.find(\n      (prerequisite) => prerequisite instanceof PrerequisiteClass\n    );\n    if (!prerequisite) {\n      prerequisite = new PrerequisiteClass(this.projectRoot);\n      this.projectPrerequisites.push(prerequisite);\n    }\n    return await prerequisite.assertAsync();\n  }\n\n  /**\n   * Sends a message over web sockets to all connected devices,\n   * does nothing when the dev server is not running.\n   *\n   * @param method name of the command. In RN projects `reload`, and `devMenu` are available. In Expo Go, `sendDevCommand` is available.\n   * @param params extra event info to send over the socket.\n   */\n  broadcastMessage(method: 'reload' | 'devMenu' | 'sendDevCommand', params?: Record<string, any>) {\n    devServers.forEach((server) => {\n      server.broadcastMessage(method, params);\n    });\n  }\n\n  /** Get the port for the dev server (either Webpack or Metro) that is hosting code for React Native runtimes. */\n  getNativeDevServerPort() {\n    const server = devServers.find((server) => server.isTargetingNative());\n    return server?.getInstance()?.location.port ?? null;\n  }\n\n  /** Get the first server that targets web. */\n  getWebDevServer() {\n    const server = devServers.find((server) => server.isTargetingWeb());\n    return server ?? null;\n  }\n\n  getDefaultDevServer(): BundlerDevServer {\n    // Return the first native dev server otherwise return the first dev server.\n    const server = devServers.find((server) => server.isTargetingNative());\n    const defaultServer = server ?? devServers[0];\n    assert(defaultServer, 'No dev servers are running');\n    return defaultServer;\n  }\n\n  async ensureWebDevServerRunningAsync() {\n    const [server] = devServers.filter((server) => server.isTargetingWeb());\n    if (server) {\n      return;\n    }\n    const { exp } = getConfig(this.projectRoot, {\n      skipPlugins: true,\n      skipSDKVersionRequirement: true,\n    });\n    const bundler = getPlatformBundlers(exp).web;\n    debug(`Starting ${bundler} dev server for web`);\n    return this.startAsync([\n      {\n        type: bundler,\n        options: this.options,\n      },\n    ]);\n  }\n\n  /** Switch between Expo Go and Expo Dev Clients. */\n  async toggleRuntimeMode(isUsingDevClient: boolean = !this.options.devClient): Promise<boolean> {\n    const nextMode = isUsingDevClient ? '--dev-client' : '--go';\n    Log.log(printItem(chalk`Switching to {bold ${nextMode}}`));\n\n    const nextScheme = await resolveSchemeAsync(this.projectRoot, {\n      devClient: isUsingDevClient,\n      // NOTE: The custom `--scheme` argument is lost from this point on.\n    });\n\n    this.options.location.scheme = nextScheme;\n    this.options.devClient = isUsingDevClient;\n    for (const devServer of devServers) {\n      devServer.isDevClient = isUsingDevClient;\n      const urlCreator = devServer.getUrlCreator();\n      urlCreator.defaults ??= {};\n      urlCreator.defaults.scheme = nextScheme;\n    }\n\n    debug(`New runtime options (runtime: ${nextMode}):`, this.options);\n    return true;\n  }\n\n  /** Start all dev servers. */\n  async startAsync(startOptions: MultiBundlerStartOptions): Promise<ExpoConfig> {\n    const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n\n    await logEventAsync('Start Project', {\n      sdkVersion: exp.sdkVersion ?? null,\n    });\n\n    const platformBundlers = getPlatformBundlers(exp);\n\n    // Start all dev servers...\n    for (const { type, options } of startOptions) {\n      const BundlerDevServerClass = await BUNDLERS[type]();\n      const server = new BundlerDevServerClass(this.projectRoot, platformBundlers, {\n        devToolsPluginManager: this.devtoolsPluginManager,\n        isDevClient: !!options?.devClient,\n      });\n      await server.startAsync(options ?? this.options);\n      devServers.push(server);\n    }\n\n    return exp;\n  }\n\n  async bootstrapTypeScriptAsync() {\n    const typescriptPrerequisite = await this.ensureProjectPrerequisiteAsync(\n      TypeScriptProjectPrerequisite\n    );\n\n    if (env.EXPO_NO_TYPESCRIPT_SETUP) {\n      return;\n    }\n\n    // Optionally, wait for the user to add TypeScript during the\n    // development cycle.\n    const server = devServers.find((server) => server.name === 'metro');\n    if (!server) {\n      return;\n    }\n\n    if (!typescriptPrerequisite) {\n      server.waitForTypeScriptAsync().then(async (success) => {\n        if (success) {\n          await server.startTypeScriptServices();\n        }\n      });\n    } else {\n      server.startTypeScriptServices();\n    }\n  }\n\n  async watchEnvironmentVariables() {\n    await devServers.find((server) => server.name === 'metro')?.watchEnvironmentVariables();\n  }\n\n  /** Stop all servers including ADB. */\n  async stopAsync(): Promise<void> {\n    await Promise.allSettled([\n      this.notifier?.stopObserving(),\n      // Stop all dev servers\n      ...devServers.map((server) => server.stopAsync()),\n      // Stop ADB\n      AndroidDebugBridge.getServer().stopAsync(),\n    ]);\n  }\n}\n"],"names":["AndroidDebugBridge","urlCreator","debug","require","devServers","BUNDLERS","webpack","WebpackBundlerDevServer","metro","MetroBundlerDevServer","DevServerManager","constructor","projectRoot","options","projectPrerequisites","notifier","watchBabelConfig","devtoolsPluginManager","DevToolsPluginManager","FileNotifier","additionalWarning","chalk","startObserving","ensureProjectPrerequisiteAsync","PrerequisiteClass","prerequisite","find","push","assertAsync","broadcastMessage","method","params","forEach","server","getNativeDevServerPort","isTargetingNative","getInstance","location","port","getWebDevServer","isTargetingWeb","getDefaultDevServer","defaultServer","assert","ensureWebDevServerRunningAsync","filter","exp","getConfig","skipPlugins","skipSDKVersionRequirement","bundler","getPlatformBundlers","web","startAsync","type","toggleRuntimeMode","isUsingDevClient","devClient","nextMode","Log","log","printItem","nextScheme","resolveSchemeAsync","scheme","devServer","isDevClient","getUrlCreator","defaults","startOptions","logEventAsync","sdkVersion","platformBundlers","BundlerDevServerClass","devToolsPluginManager","bootstrapTypeScriptAsync","typescriptPrerequisite","TypeScriptProjectPrerequisite","env","EXPO_NO_TYPESCRIPT_SETUP","name","waitForTypeScriptAsync","then","success","startTypeScriptServices","watchEnvironmentVariables","stopAsync","Promise","allSettled","stopObserving","map","getServer"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js
new file mode 100644
index 0000000..e39e3eb
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js
@@ -0,0 +1,63 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+exports.DevToolsPluginEndpoint = exports.default = void 0;
+var _path = _interopRequireDefault(require("path"));
+var _resolveFrom = _interopRequireDefault(require("resolve-from"));
+class DevToolsPluginManager {
+    constructor(projectRoot){
+        this.projectRoot = projectRoot;
+        this.plugins = null;
+    }
+    async queryPluginsAsync() {
+        if (this.plugins) {
+            return this.plugins;
+        }
+        const plugins = (await this.queryAutolinkedPluginsAsync(this.projectRoot)).map((plugin)=>({
+                ...plugin,
+                webpageEndpoint: `${DevToolsPluginEndpoint}/${plugin.packageName}`
+            })
+        );
+        this.plugins = plugins;
+        return this.plugins;
+    }
+    async queryPluginWebpageRootAsync(pluginName) {
+        const plugins = await this.queryPluginsAsync();
+        const plugin = plugins.find((p)=>p.packageName === pluginName
+        );
+        var ref;
+        return (ref = plugin == null ? void 0 : plugin.webpageRoot) != null ? ref : null;
+    }
+    async queryAutolinkedPluginsAsync(projectRoot) {
+        const expoPackagePath = _resolveFrom.default.silent(projectRoot, "expo/package.json");
+        if (!expoPackagePath) {
+            return [];
+        }
+        const resolvedPath = _resolveFrom.default.silent(_path.default.dirname(expoPackagePath), "expo-modules-autolinking/exports");
+        if (!resolvedPath) {
+            return [];
+        }
+        const autolinkingModule = require(resolvedPath);
+        if (!autolinkingModule.queryAutolinkingModulesFromProjectAsync) {
+            throw new Error("Missing exported `queryAutolinkingModulesFromProjectAsync()` function from `expo-modules-autolinking`");
+        }
+        const plugins = await autolinkingModule.queryAutolinkingModulesFromProjectAsync(projectRoot, {
+            platform: "devtools",
+            onlyProjectDeps: false
+        });
+        debug("Found autolinked plugins", this.plugins);
+        return plugins;
+    }
+}
+exports.default = DevToolsPluginManager;
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
+const debug = require("debug")("expo:start:server:devtools");
+const DevToolsPluginEndpoint = "/_expo/plugins";
+exports.DevToolsPluginEndpoint = DevToolsPluginEndpoint;
+
+//# sourceMappingURL=DevToolsPluginManager.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js.map b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js.map
new file mode 100644
index 0000000..95e11ed
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/DevToolsPluginManager.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../../src/start/server/DevToolsPluginManager.ts"],"sourcesContent":["import type { ModuleDescriptorDevTools } from 'expo-modules-autolinking/exports';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nconst debug = require('debug')('expo:start:server:devtools');\n\nexport const DevToolsPluginEndpoint = '/_expo/plugins';\n\ninterface AutolinkingPlugin {\n  packageName: string;\n  packageRoot: string;\n  webpageRoot: string;\n}\n\nexport interface DevToolsPlugin extends AutolinkingPlugin {\n  webpageEndpoint: string;\n}\n\nexport default class DevToolsPluginManager {\n  private plugins: DevToolsPlugin[] | null = null;\n\n  constructor(private projectRoot: string) {}\n\n  public async queryPluginsAsync(): Promise<DevToolsPlugin[]> {\n    if (this.plugins) {\n      return this.plugins;\n    }\n    const plugins = (await this.queryAutolinkedPluginsAsync(this.projectRoot)).map((plugin) => ({\n      ...plugin,\n      webpageEndpoint: `${DevToolsPluginEndpoint}/${plugin.packageName}`,\n    }));\n    this.plugins = plugins;\n    return this.plugins;\n  }\n\n  public async queryPluginWebpageRootAsync(pluginName: string): Promise<string | null> {\n    const plugins = await this.queryPluginsAsync();\n    const plugin = plugins.find((p) => p.packageName === pluginName);\n    return plugin?.webpageRoot ?? null;\n  }\n\n  private async queryAutolinkedPluginsAsync(projectRoot: string): Promise<AutolinkingPlugin[]> {\n    const expoPackagePath = resolveFrom.silent(projectRoot, 'expo/package.json');\n    if (!expoPackagePath) {\n      return [];\n    }\n    const resolvedPath = resolveFrom.silent(\n      path.dirname(expoPackagePath),\n      'expo-modules-autolinking/exports'\n    );\n    if (!resolvedPath) {\n      return [];\n    }\n    const autolinkingModule = require(\n      resolvedPath\n    ) as typeof import('expo-modules-autolinking/exports');\n    if (!autolinkingModule.queryAutolinkingModulesFromProjectAsync) {\n      throw new Error(\n        'Missing exported `queryAutolinkingModulesFromProjectAsync()` function from `expo-modules-autolinking`'\n      );\n    }\n    const plugins = (await autolinkingModule.queryAutolinkingModulesFromProjectAsync(projectRoot, {\n      platform: 'devtools',\n      onlyProjectDeps: false,\n    })) as ModuleDescriptorDevTools[];\n    debug('Found autolinked plugins', this.plugins);\n    return plugins;\n  }\n}\n"],"names":["DevToolsPluginManager","constructor","projectRoot","plugins","queryPluginsAsync","queryAutolinkedPluginsAsync","map","plugin","webpageEndpoint","DevToolsPluginEndpoint","packageName","queryPluginWebpageRootAsync","pluginName","find","p","webpageRoot","expoPackagePath","resolveFrom","silent","resolvedPath","path","dirname","autolinkingModule","require","queryAutolinkingModulesFromProjectAsync","Error","platform","onlyProjectDeps","debug"],"mappings":"AAAA;;;;;AACiB,IAAA,KAAM,kCAAN,MAAM,EAAA;AACC,IAAA,YAAc,kCAAd,cAAc,EAAA;AAgBvB,MAAMA,qBAAqB;IAGxCC,YAAoBC,WAAmB,CAAE;aAArBA,WAAmB,GAAnBA,WAAmB;aAF/BC,OAAO,GAA4B,IAAI;KAEJ;IAE3C,MAAaC,iBAAiB,GAA8B;QAC1D,IAAI,IAAI,CAACD,OAAO,EAAE;YAChB,OAAO,IAAI,CAACA,OAAO,CAAC;SACrB;QACD,MAAMA,OAAO,GAAG,CAAC,MAAM,IAAI,CAACE,2BAA2B,CAAC,IAAI,CAACH,WAAW,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,MAAM,GAAK,CAAC;gBAC1F,GAAGA,MAAM;gBACTC,eAAe,EAAE,CAAC,EAAEC,sBAAsB,CAAC,CAAC,EAAEF,MAAM,CAACG,WAAW,CAAC,CAAC;aACnE,CAAC;QAAA,CAAC,AAAC;QACJ,IAAI,CAACP,OAAO,GAAGA,OAAO,CAAC;QACvB,OAAO,IAAI,CAACA,OAAO,CAAC;KACrB;IAED,MAAaQ,2BAA2B,CAACC,UAAkB,EAA0B;QACnF,MAAMT,OAAO,GAAG,MAAM,IAAI,CAACC,iBAAiB,EAAE,AAAC;QAC/C,MAAMG,MAAM,GAAGJ,OAAO,CAACU,IAAI,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACJ,WAAW,KAAKE,UAAU;QAAA,CAAC,AAAC;YAC1DL,GAAmB;QAA1B,OAAOA,CAAAA,GAAmB,GAAnBA,MAAM,QAAa,GAAnBA,KAAAA,CAAmB,GAAnBA,MAAM,CAAEQ,WAAW,YAAnBR,GAAmB,GAAI,IAAI,CAAC;KACpC;IAED,MAAcF,2BAA2B,CAACH,WAAmB,EAAgC;QAC3F,MAAMc,eAAe,GAAGC,YAAW,QAAA,CAACC,MAAM,CAAChB,WAAW,EAAE,mBAAmB,CAAC,AAAC;QAC7E,IAAI,CAACc,eAAe,EAAE;YACpB,OAAO,EAAE,CAAC;SACX;QACD,MAAMG,YAAY,GAAGF,YAAW,QAAA,CAACC,MAAM,CACrCE,KAAI,QAAA,CAACC,OAAO,CAACL,eAAe,CAAC,EAC7B,kCAAkC,CACnC,AAAC;QACF,IAAI,CAACG,YAAY,EAAE;YACjB,OAAO,EAAE,CAAC;SACX;QACD,MAAMG,iBAAiB,GAAGC,OAAO,CAC/BJ,YAAY,CACb,AAAqD,AAAC;QACvD,IAAI,CAACG,iBAAiB,CAACE,uCAAuC,EAAE;YAC9D,MAAM,IAAIC,KAAK,CACb,uGAAuG,CACxG,CAAC;SACH;QACD,MAAMtB,OAAO,GAAI,MAAMmB,iBAAiB,CAACE,uCAAuC,CAACtB,WAAW,EAAE;YAC5FwB,QAAQ,EAAE,UAAU;YACpBC,eAAe,EAAE,KAAK;SACvB,CAAC,AAA+B,AAAC;QAClCC,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAACzB,OAAO,CAAC,CAAC;QAChD,OAAOA,OAAO,CAAC;KAChB;CACF;kBAlDoBH,qBAAqB;;;;;;AAd1C,MAAM4B,KAAK,GAAGL,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC,AAAC;AAEtD,MAAMd,sBAAsB,GAAG,gBAAgB,AAAC;QAA1CA,sBAAsB,GAAtBA,sBAAsB"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
index f2032b6..34cbb9c 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
@@ -18,6 +18,7 @@ var _bundlerDevServer = require("../BundlerDevServer");
 var _getStaticRenderFunctions = require("../getStaticRenderFunctions");
 var _contextModuleSourceMapsMiddleware = require("../middleware/ContextModuleSourceMapsMiddleware");
 var _createFileMiddleware = require("../middleware/CreateFileMiddleware");
+var _devToolsPluginMiddleware = require("../middleware/DevToolsPluginMiddleware");
 var _faviconMiddleware = require("../middleware/FaviconMiddleware");
 var _historyFallbackMiddleware = require("../middleware/HistoryFallbackMiddleware");
 var _interstitialPageMiddleware = require("../middleware/InterstitialPageMiddleware");
@@ -247,6 +248,7 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
             scheme: (_scheme = options.location.scheme) != null ? _scheme : null
         }).getHandler());
         middleware.use(new _reactDevToolsPageMiddleware.ReactDevToolsPageMiddleware(this.projectRoot).getHandler());
+        middleware.use(new _devToolsPluginMiddleware.DevToolsPluginMiddleware(this.projectRoot, this.devToolsPluginManager).getHandler());
         const deepLinkMiddleware = new _runtimeRedirectMiddleware.RuntimeRedirectMiddleware(this.projectRoot, {
             onDeepLink: getDeepLinkHandler(this.projectRoot),
             getLocation: ({ runtime  })=>{
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
index 4e2ec07..828bb38 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport { prependMiddleware } from '@expo/dev-server';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fetch from 'node-fetch';\nimport path from 'path';\n\nimport { Log } from '../../../log';\nimport getDevClientProperties from '../../../utils/analytics/getDevClientProperties';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport { getStaticRenderFunctions } from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport { createBundleUrlPath, resolveMainModuleName } from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport {\n  DeepLinkHandler,\n  RuntimeRedirectMiddleware,\n} from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport { ServerNext, ServerRequest, ServerResponse } from '../middleware/server.types';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { getErrorOverlayHtmlAsync } from './metroErrorInterface';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport { observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: import('metro').Server | null = null;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  /** Get routes from Expo Router. */\n  async getRoutesAsync() {\n    const url = this.getDevServerUrl();\n    assert(url, 'Dev server must be started');\n    const { getManifest } = await getStaticRenderFunctions(this.projectRoot, url, {\n      // Ensure the API Routes are included\n      environment: 'node',\n    });\n\n    return getManifest({ fetchData: true });\n  }\n\n  async composeResourcesWithHtml({\n    mode,\n    resources,\n    template,\n    devBundleUrl,\n  }: {\n    mode: 'development' | 'production';\n    resources: SerialAsset[];\n    template: string;\n    devBundleUrl?: string;\n  }): Promise<string> {\n    if (!resources) {\n      return '';\n    }\n    const isDev = mode === 'development';\n    return htmlFromSerialAssets(resources, {\n      dev: isDev,\n      template,\n      bundleUrl: isDev ? devBundleUrl : undefined,\n    });\n  }\n\n  async getStaticRenderFunctionAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: 'development' | 'production';\n    minify?: boolean;\n  }) {\n    const url = this.getDevServerUrl()!;\n\n    const { getStaticContent } = await getStaticRenderFunctions(this.projectRoot, url, {\n      minify,\n      dev: mode !== 'production',\n      // Ensure the API Routes are included\n      environment: 'node',\n    });\n    return async (path: string) => {\n      return await getStaticContent(new URL(path, url));\n    };\n  }\n\n  async getStaticResourcesAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: string;\n    minify?: boolean;\n  }): Promise<SerialAsset[]> {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      minify,\n      environment: 'client',\n      serializerOutput: 'static',\n      mainModuleName: resolveMainModuleName(this.projectRoot, getConfig(this.projectRoot), 'web'),\n    });\n\n    const bundleUrl = new URL(devBundleUrlPathname, this.getDevServerUrl()!);\n\n    // Fetch the generated HTML from our custom Metro serializer\n    const results = await fetch(bundleUrl.toString());\n\n    const txt = await results.text();\n\n    let data: any;\n    try {\n      data = JSON.parse(txt);\n    } catch (error: any) {\n      Log.error(\n        'Failed to generate resources with Metro, the Metro config may not be using the correct serializer. Ensure the metro.config.js is extending the expo/metro-config and is not overriding the serializer.'\n      );\n      debug(txt);\n      throw error;\n    }\n\n    // NOTE: This could potentially need more validation in the future.\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (data != null && (data.errors || data.type?.match(/.*Error$/))) {\n      // {\n      //   type: 'InternalError',\n      //   errors: [],\n      //   message: 'Metro has encountered an error: While trying to resolve module `stylis` from file `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js`, the package `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/package.json` was successfully found. However, this package itself specifies a `main` module field that could not be resolved (`/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs`. Indeed, none of these files exist:\\n' +\n      //     '\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css)\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs/index(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css): /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/metro/src/node-haste/DependencyGraph.js (289:17)\\n' +\n      //     '\\n' +\n      //     '\\x1B[0m \\x1B[90m 287 |\\x1B[39m         }\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 288 |\\x1B[39m         \\x1B[36mif\\x1B[39m (error \\x1B[36minstanceof\\x1B[39m \\x1B[33mInvalidPackageError\\x1B[39m) {\\x1B[0m\\n' +\n      //     '\\x1B[0m\\x1B[31m\\x1B[1m>\\x1B[22m\\x1B[39m\\x1B[90m 289 |\\x1B[39m           \\x1B[36mthrow\\x1B[39m \\x1B[36mnew\\x1B[39m \\x1B[33mPackageResolutionError\\x1B[39m({\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m     |\\x1B[39m                 \\x1B[31m\\x1B[1m^\\x1B[22m\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 290 |\\x1B[39m             packageError\\x1B[33m:\\x1B[39m error\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 291 |\\x1B[39m             originModulePath\\x1B[33m:\\x1B[39m \\x1B[36mfrom\\x1B[39m\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 292 |\\x1B[39m             targetModuleName\\x1B[33m:\\x1B[39m to\\x1B[33m,\\x1B[39m\\x1B[0m'\n      // }\n      // The Metro logger already showed this error.\n      throw new Error(data.message);\n    }\n\n    throw new Error(\n      'Invalid resources returned from the Metro serializer. Expected array, found: ' + data\n    );\n  }\n\n  private async renderStaticErrorAsync(error: Error) {\n    return getErrorOverlayHtmlAsync({\n      error,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  async getStaticPageAsync(\n    pathname: string,\n    {\n      mode,\n      minify = mode !== 'development',\n    }: {\n      mode: 'development' | 'production';\n      minify?: boolean;\n    }\n  ) {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      environment: 'client',\n      mainModuleName: resolveMainModuleName(this.projectRoot, getConfig(this.projectRoot), 'web'),\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await getStaticRenderFunctions(\n        this.projectRoot,\n        this.getDevServerUrl()!,\n        {\n          minify: false,\n          dev: mode !== 'production',\n          // Ensure the API Routes are included\n          environment: 'node',\n        }\n      );\n\n      const location = new URL(pathname, this.getDevServerUrl()!);\n      return await getStaticContent(location);\n    };\n\n    const [resources, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({ mode, minify }),\n      bundleStaticHtml(),\n    ]);\n    const content = await this.composeResourcesWithHtml({\n      mode,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n\n      // Use the unversioned metro config.\n      // TODO: Deprecate this property when expo-cli goes away.\n      unversioned: false,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions\n    );\n\n    const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n    // Important that we noop source maps for context modules as soon as possible.\n    prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n    // We need the manifest handler to be the first middleware to run so our\n    // routes take precedence over static files. For example, the manifest is\n    // served from '/' and if the user has an index.html file in their project\n    // then the manifest handler will never run, the static middleware will run\n    // and serve index.html instead of the manifest.\n    // https://github.com/expo/expo/issues/13114\n    prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n    middleware.use(\n      new InterstitialPageMiddleware(this.projectRoot, {\n        // TODO: Prevent this from becoming stale.\n        scheme: options.location.scheme ?? null,\n      }).getHandler()\n    );\n    middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n\n    const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n      onDeepLink: getDeepLinkHandler(this.projectRoot),\n      getLocation: ({ runtime }) => {\n        if (runtime === 'custom') {\n          return this.urlCreator?.constructDevClientUrl();\n        } else {\n          return this.urlCreator?.constructUrl({\n            scheme: 'exp',\n          });\n        }\n      },\n    });\n    middleware.use(deepLinkMiddleware.getHandler());\n\n    middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n    // Append support for redirecting unhandled requests to the index.html page on web.\n    if (this.isTargetingWeb()) {\n      const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n      const useWebSSG = exp.web?.output === 'static';\n\n      // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n      middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n      // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n      middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n\n      if (useWebSSG) {\n        middleware.use(async (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n          if (!req?.url) {\n            return next();\n          }\n\n          // TODO: Formal manifest for allowed paths\n          if (req.url.endsWith('.ico')) {\n            return next();\n          }\n          if (req.url.includes('serializer.output=static')) {\n            return next();\n          }\n\n          try {\n            const { content } = await this.getStaticPageAsync(req.url, {\n              mode: options.mode ?? 'development',\n            });\n\n            res.setHeader('Content-Type', 'text/html');\n            res.end(content);\n            return;\n          } catch (error: any) {\n            res.setHeader('Content-Type', 'text/html');\n            try {\n              res.end(await this.renderStaticErrorAsync(error));\n            } catch (staticError: any) {\n              // Fallback error for when Expo Router is misconfigured in the project.\n              res.end(\n                '<span><h3>Internal Error:</h3><b>Project is not setup correctly for static rendering (check terminal for more info):</b><br/>' +\n                  error.message +\n                  '<br/><br/>' +\n                  staticError.message +\n                  '</span>'\n              );\n            }\n          }\n        });\n      }\n\n      // This MUST run last since it's the fallback.\n      if (!useWebSSG) {\n        middleware.use(\n          new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n        );\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        callback?.(err);\n      });\n    };\n\n    this.metro = metro;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    startTypescriptTypeGenerationAsync({\n      server: this.instance!.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n}\n\nexport function getDeepLinkHandler(projectRoot: string): DeepLinkHandler {\n  return async ({ runtime }) => {\n    if (runtime === 'expo') return;\n    const { exp } = getConfig(projectRoot);\n    await logEventAsync('dev client start command', {\n      status: 'started',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  };\n}\n\nfunction htmlFromSerialAssets(\n  assets: SerialAsset[],\n  { dev, template, bundleUrl }: { dev: boolean; template: string; bundleUrl?: string }\n) {\n  // Combine the CSS modules into tags that have hot refresh data attributes.\n  const styleString = assets\n    .filter((asset) => asset.type === 'css')\n    .map(({ metadata, filename, source }) => {\n      if (dev) {\n        return `<style data-expo-css-hmr=\"${metadata.hmrId}\">` + source + '\\n</style>';\n      } else {\n        return [\n          `<link rel=\"preload\" href=\"/${filename}\" as=\"style\">`,\n          `<link rel=\"stylesheet\" href=\"/${filename}\">`,\n        ].join('');\n      }\n    })\n    .join('');\n\n  const jsAssets = assets.filter((asset) => asset.type === 'js');\n\n  const scripts = bundleUrl\n    ? `<script src=\"${bundleUrl}\" defer></script>`\n    : jsAssets\n        .map(({ filename }) => {\n          return `<script src=\"/${filename}\" defer></script>`;\n        })\n        .join('');\n\n  return template\n    .replace('</head>', `${styleString}</head>`)\n    .replace('</body>', `${scripts}\\n</body>`);\n}\n"],"names":["getDeepLinkHandler","runtimeEnv","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","MetroBundlerDevServer","BundlerDevServer","metro","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","getRoutesAsync","url","getDevServerUrl","assert","getManifest","getStaticRenderFunctions","projectRoot","environment","fetchData","composeResourcesWithHtml","mode","resources","template","devBundleUrl","isDev","htmlFromSerialAssets","dev","bundleUrl","undefined","getStaticRenderFunctionAsync","minify","getStaticContent","path","URL","getStaticResourcesAsync","data","devBundleUrlPathname","createBundleUrlPath","platform","serializerOutput","mainModuleName","resolveMainModuleName","getConfig","results","fetch","toString","txt","text","JSON","parse","error","Log","Array","isArray","errors","type","match","Error","message","renderStaticErrorAsync","getErrorOverlayHtmlAsync","getStaticPageAsync","pathname","bundleStaticHtml","location","staticHtml","Promise","all","content","watchEnvironmentVariables","instance","envFiles","getFiles","NODE_ENV","map","fileName","join","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","parsedOptions","maxWorkers","resetCache","resetDevServer","unversioned","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","deepLinkMiddleware","RuntimeRedirectMiddleware","onDeepLink","getLocation","runtime","constructDevClientUrl","constructUrl","CreateFileMiddleware","isTargetingWeb","exp","skipSDKVersionRequirement","useWebSSG","web","output","ServeStaticMiddleware","FaviconMiddleware","req","res","next","endsWith","includes","setHeader","end","staticError","HistoryFallbackMiddleware","internal","originalClose","close","bind","callback","err","host","protocol","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","logEventAsync","status","getDevClientProperties","assets","styleString","filter","asset","metadata","filename","source","hmrId","jsAssets","scripts","replace"],"mappings":"AAMA;;;;QA4dgBA,kBAAkB,GAAlBA,kBAAkB;AA5dR,IAAA,OAAc,WAAd,cAAc,CAAA;AACN,IAAA,UAAkB,WAAlB,kBAAkB,CAAA;AACxCC,IAAAA,UAAU,mCAAM,WAAW,EAAjB;AAEH,IAAA,OAAQ,kCAAR,QAAQ,EAAA;AACT,IAAA,MAAO,kCAAP,OAAO,EAAA;AACP,IAAA,UAAY,kCAAZ,YAAY,EAAA;AACb,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEH,IAAA,IAAc,WAAd,cAAc,CAAA;AACC,IAAA,uBAAiD,kCAAjD,iDAAiD,EAAA;AACtD,IAAA,kBAA4C,WAA5C,4CAA4C,CAAA;AACzC,IAAA,KAAqB,WAArB,qBAAqB,CAAA;AACmB,IAAA,iBAAqB,WAArB,qBAAqB,CAAA;AACrD,IAAA,yBAA6B,WAA7B,6BAA6B,CAAA;AACpB,IAAA,kCAAiD,WAAjD,iDAAiD,CAAA;AAC9D,IAAA,qBAAoC,WAApC,oCAAoC,CAAA;AACvC,IAAA,kBAAiC,WAAjC,iCAAiC,CAAA;AACzB,IAAA,0BAAyC,WAAzC,yCAAyC,CAAA;AACxC,IAAA,2BAA0C,WAA1C,0CAA0C,CAAA;AAC1B,IAAA,mBAAkC,WAAlC,kCAAkC,CAAA;AACjD,IAAA,4BAA2C,WAA3C,2CAA2C,CAAA;AAIhF,IAAA,0BAAyC,WAAzC,yCAAyC,CAAA;AACV,IAAA,sBAAqC,WAArC,qCAAqC,CAAA;AAExB,IAAA,8BAAkD,WAAlD,kDAAkD,CAAA;AAC/D,IAAA,iBAAoB,WAApB,oBAAoB,CAAA;AACjB,IAAA,oBAAuB,WAAvB,uBAAuB,CAAA;AACtB,IAAA,0BAA6B,WAA7B,6BAA6B,CAAA;AACpC,IAAA,oCAAuC,WAAvC,uCAAuC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE1E,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,yBAAyB,CAAC,AAAsB,AAAC;AAEhF,uDAAuD,CACvD,MAAMC,kBAAkB,GAAG,IAAI,AAAC;AAEhC,mGAAmG,CACnG,MAAMC,qBAAqB,GAAG,IAAI,AAAC;AAE5B,MAAMC,qBAAqB,SAASC,iBAAgB,iBAAA;IACzD,AAAQC,KAAK,GAAkC,IAAI,CAAC;IAEpD,IAAIC,IAAI,GAAW;QACjB,OAAO,OAAO,CAAC;KAChB;IAED,MAAMC,gBAAgB,CAACC,OAAqC,GAAG,EAAE,EAAmB;YAEhF,yEAAyE;QACzEA,MAAY;QAFd,MAAMC,IAAI,GAERD,CAAAA,MAAY,GAAZA,OAAO,CAACC,IAAI,YAAZD,MAAY,GACZ,8DAA8D;QAC9D,CAACA,OAAO,CAACE,SAAS,GAEdC,MAAM,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,IAAIZ,qBAAqB,GAE3D,MAAMa,CAAAA,GAAAA,KAAgB,AAAoB,CAAA,iBAApB,CAACd,kBAAkB,CAAC,CAAC,AAAC;QAElD,OAAOQ,IAAI,CAAC;KACb;IAED,mCAAmC,CACnC,MAAMO,cAAc,GAAG;QACrB,MAAMC,GAAG,GAAG,IAAI,CAACC,eAAe,EAAE,AAAC;QACnCC,CAAAA,GAAAA,OAAM,AAAmC,CAAA,QAAnC,CAACF,GAAG,EAAE,4BAA4B,CAAC,CAAC;QAC1C,MAAM,EAAEG,WAAW,CAAA,EAAE,GAAG,MAAMC,CAAAA,GAAAA,yBAAwB,AAGpD,CAAA,yBAHoD,CAAC,IAAI,CAACC,WAAW,EAAEL,GAAG,EAAE;YAC5E,qCAAqC;YACrCM,WAAW,EAAE,MAAM;SACpB,CAAC,AAAC;QAEH,OAAOH,WAAW,CAAC;YAAEI,SAAS,EAAE,IAAI;SAAE,CAAC,CAAC;KACzC;IAED,MAAMC,wBAAwB,CAAC,EAC7BC,IAAI,CAAA,EACJC,SAAS,CAAA,EACTC,QAAQ,CAAA,EACRC,YAAY,CAAA,EAMb,EAAmB;QAClB,IAAI,CAACF,SAAS,EAAE;YACd,OAAO,EAAE,CAAC;SACX;QACD,MAAMG,KAAK,GAAGJ,IAAI,KAAK,aAAa,AAAC;QACrC,OAAOK,oBAAoB,CAACJ,SAAS,EAAE;YACrCK,GAAG,EAAEF,KAAK;YACVF,QAAQ;YACRK,SAAS,EAAEH,KAAK,GAAGD,YAAY,GAAGK,SAAS;SAC5C,CAAC,CAAC;KACJ;IAED,MAAMC,4BAA4B,CAAC,EACjCT,IAAI,CAAA,EACJU,MAAM,EAAGV,IAAI,KAAK,aAAa,CAAA,EAIhC,EAAE;QACD,MAAMT,GAAG,GAAG,IAAI,CAACC,eAAe,EAAE,AAAC,AAAC;QAEpC,MAAM,EAAEmB,gBAAgB,CAAA,EAAE,GAAG,MAAMhB,CAAAA,GAAAA,yBAAwB,AAKzD,CAAA,yBALyD,CAAC,IAAI,CAACC,WAAW,EAAEL,GAAG,EAAE;YACjFmB,MAAM;YACNJ,GAAG,EAAEN,IAAI,KAAK,YAAY;YAC1B,qCAAqC;YACrCH,WAAW,EAAE,MAAM;SACpB,CAAC,AAAC;QACH,OAAO,OAAOe,IAAY,GAAK;YAC7B,OAAO,MAAMD,gBAAgB,CAAC,IAAIE,GAAG,CAACD,IAAI,EAAErB,GAAG,CAAC,CAAC,CAAC;SACnD,CAAC;KACH;IAED,MAAMuB,uBAAuB,CAAC,EAC5Bd,IAAI,CAAA,EACJU,MAAM,EAAGV,IAAI,KAAK,aAAa,CAAA,EAIhC,EAA0B;YAiCWe,GAAS;QAhC7C,MAAMC,oBAAoB,GAAGC,CAAAA,GAAAA,mBAAmB,AAO9C,CAAA,oBAP8C,CAAC;YAC/CC,QAAQ,EAAE,KAAK;YACflB,IAAI;YACJU,MAAM;YACNb,WAAW,EAAE,QAAQ;YACrBsB,gBAAgB,EAAE,QAAQ;YAC1BC,cAAc,EAAEC,CAAAA,GAAAA,mBAAqB,AAAsD,CAAA,sBAAtD,CAAC,IAAI,CAACzB,WAAW,EAAE0B,CAAAA,GAAAA,OAAS,AAAkB,CAAA,UAAlB,CAAC,IAAI,CAAC1B,WAAW,CAAC,EAAE,KAAK,CAAC;SAC5F,CAAC,AAAC;QAEH,MAAMW,SAAS,GAAG,IAAIM,GAAG,CAACG,oBAAoB,EAAE,IAAI,CAACxB,eAAe,EAAE,CAAE,AAAC;QAEzE,4DAA4D;QAC5D,MAAM+B,OAAO,GAAG,MAAMC,CAAAA,GAAAA,UAAK,AAAsB,CAAA,QAAtB,CAACjB,SAAS,CAACkB,QAAQ,EAAE,CAAC,AAAC;QAElD,MAAMC,GAAG,GAAG,MAAMH,OAAO,CAACI,IAAI,EAAE,AAAC;QAEjC,IAAIZ,IAAI,AAAK,AAAC;QACd,IAAI;YACFA,IAAI,GAAGa,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,CAAC;SACxB,CAAC,OAAOI,KAAK,EAAO;YACnBC,IAAG,IAAA,CAACD,KAAK,CACP,wMAAwM,CACzM,CAAC;YACFzD,KAAK,CAACqD,GAAG,CAAC,CAAC;YACX,MAAMI,KAAK,CAAC;SACb;QAED,mEAAmE;QACnE,IAAIE,KAAK,CAACC,OAAO,CAAClB,IAAI,CAAC,EAAE;YACvB,OAAOA,IAAI,CAAC;SACb;QAED,IAAIA,IAAI,IAAI,IAAI,IAAI,CAACA,IAAI,CAACmB,MAAM,KAAInB,CAAAA,GAAS,GAATA,IAAI,CAACoB,IAAI,SAAO,GAAhBpB,KAAAA,CAAgB,GAAhBA,GAAS,CAAEqB,KAAK,YAAY,CAAA,CAAC,EAAE;YACjE,IAAI;YACJ,2BAA2B;YAC3B,gBAAgB;YAChB,2jBAA2jB;YAC3jB,aAAa;YACb,8OAA8O;YAC9O,4WAA4W;YAC5W,aAAa;YACb,4DAA4D;YAC5D,sJAAsJ;YACtJ,8KAA8K;YAC9K,mGAAmG;YACnG,mHAAmH;YACnH,sIAAsI;YACtI,gHAAgH;YAChH,IAAI;YACJ,8CAA8C;YAC9C,MAAM,IAAIC,KAAK,CAACtB,IAAI,CAACuB,OAAO,CAAC,CAAC;SAC/B;QAED,MAAM,IAAID,KAAK,CACb,+EAA+E,GAAGtB,IAAI,CACvF,CAAC;KACH;IAED,MAAcwB,sBAAsB,CAACT,KAAY,EAAE;QACjD,OAAOU,CAAAA,GAAAA,oBAAwB,AAG7B,CAAA,yBAH6B,CAAC;YAC9BV,KAAK;YACLlC,WAAW,EAAE,IAAI,CAACA,WAAW;SAC9B,CAAC,CAAC;KACJ;IAED,MAAM6C,kBAAkB,CACtBC,QAAgB,EAChB,EACE1C,IAAI,CAAA,EACJU,MAAM,EAAGV,IAAI,KAAK,aAAa,CAAA,EAIhC,EACD;QACA,MAAMgB,oBAAoB,GAAGC,CAAAA,GAAAA,mBAAmB,AAK9C,CAAA,oBAL8C,CAAC;YAC/CC,QAAQ,EAAE,KAAK;YACflB,IAAI;YACJH,WAAW,EAAE,QAAQ;YACrBuB,cAAc,EAAEC,CAAAA,GAAAA,mBAAqB,AAAsD,CAAA,sBAAtD,CAAC,IAAI,CAACzB,WAAW,EAAE0B,CAAAA,GAAAA,OAAS,AAAkB,CAAA,UAAlB,CAAC,IAAI,CAAC1B,WAAW,CAAC,EAAE,KAAK,CAAC;SAC5F,CAAC,AAAC;QAEH,MAAM+C,gBAAgB,GAAG,UAA6B;YACpD,MAAM,EAAEhC,gBAAgB,CAAA,EAAE,GAAG,MAAMhB,CAAAA,GAAAA,yBAAwB,AAS1D,CAAA,yBAT0D,CACzD,IAAI,CAACC,WAAW,EAChB,IAAI,CAACJ,eAAe,EAAE,EACtB;gBACEkB,MAAM,EAAE,KAAK;gBACbJ,GAAG,EAAEN,IAAI,KAAK,YAAY;gBAC1B,qCAAqC;gBACrCH,WAAW,EAAE,MAAM;aACpB,CACF,AAAC;YAEF,MAAM+C,QAAQ,GAAG,IAAI/B,GAAG,CAAC6B,QAAQ,EAAE,IAAI,CAAClD,eAAe,EAAE,CAAE,AAAC;YAC5D,OAAO,MAAMmB,gBAAgB,CAACiC,QAAQ,CAAC,CAAC;SACzC,AAAC;QAEF,MAAM,CAAC3C,SAAS,EAAE4C,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC;YAChD,IAAI,CAACjC,uBAAuB,CAAC;gBAAEd,IAAI;gBAAEU,MAAM;aAAE,CAAC;YAC9CiC,gBAAgB,EAAE;SACnB,CAAC,AAAC;QACH,MAAMK,OAAO,GAAG,MAAM,IAAI,CAACjD,wBAAwB,CAAC;YAClDC,IAAI;YACJC,SAAS;YACTC,QAAQ,EAAE2C,UAAU;YACpB1C,YAAY,EAAEa,oBAAoB;SACnC,CAAC,AAAC;QACH,OAAO;YACLgC,OAAO;YACP/C,SAAS;SACV,CAAC;KACH;IAED,MAAMgD,yBAAyB,GAAG;QAChC,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;YAClB,MAAM,IAAIb,KAAK,CACb,+EAA+E,CAChF,CAAC;SACH;QACD,IAAI,CAAC,IAAI,CAAC1D,KAAK,EAAE;YACf,4FAA4F;YAC5F,WAAW;YACXN,KAAK,CAAC,oFAAoF,CAAC,CAAC;YAC5F,OAAO;SACR;QAED,MAAM8E,QAAQ,GAAG/E,UAAU,CACxBgF,QAAQ,CAAClE,OAAO,CAACC,GAAG,CAACkE,QAAQ,CAAC,CAC9BC,GAAG,CAAC,CAACC,QAAQ,GAAK3C,KAAI,QAAA,CAAC4C,IAAI,CAAC,IAAI,CAAC5D,WAAW,EAAE2D,QAAQ,CAAC;QAAA,CAAC,AAAC;QAE5DE,CAAAA,GAAAA,oCAAkB,AAWjB,CAAA,mBAXiB,CAChB;YACE9E,KAAK,EAAE,IAAI,CAACA,KAAK;YACjB+E,MAAM,EAAE,IAAI,CAACR,QAAQ,CAACQ,MAAM;SAC7B,EACDP,QAAQ,EACR,IAAM;YACJ9E,KAAK,CAAC,oCAAoC,CAAC,CAAC;YAC5C,0CAA0C;YAC1CD,UAAU,CAACuF,IAAI,CAAC,IAAI,CAAC/D,WAAW,EAAE;gBAAEgE,KAAK,EAAE,IAAI;aAAE,CAAC,CAAC;SACpD,CACF,CAAC;KACH;IAED,MAAgBC,wBAAwB,CACtC/E,OAA4B,EACA;QAC5BA,OAAO,CAACC,IAAI,GAAG,MAAM,IAAI,CAACF,gBAAgB,CAACC,OAAO,CAAC,CAAC;QACpD,IAAI,CAACgF,UAAU,GAAG,IAAI,CAACC,aAAa,CAACjF,OAAO,CAAC,CAAC;QAE9C,MAAMkF,aAAa,GAAG;YACpBjF,IAAI,EAAED,OAAO,CAACC,IAAI;YAClBkF,UAAU,EAAEnF,OAAO,CAACmF,UAAU;YAC9BC,UAAU,EAAEpF,OAAO,CAACqF,cAAc;YAElC,oCAAoC;YACpC,yDAAyD;YACzDC,WAAW,EAAE,KAAK;SACnB,AAAC;QAEF,8BAA8B;QAC9BlF,OAAO,CAACC,GAAG,CAACkF,sBAAsB,GAAG,CAAC,iBAAiB,EAAEvF,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;QAExE,MAAM,EAAEJ,KAAK,CAAA,EAAE+E,MAAM,CAAA,EAAEY,UAAU,CAAA,EAAEC,aAAa,CAAA,EAAE,GAAG,MAAMC,CAAAA,GAAAA,iBAAqB,AAG/E,CAAA,sBAH+E,CAC9E,IAAI,EACJR,aAAa,CACd,AAAC;QAEF,MAAMS,kBAAkB,GAAG,MAAM,IAAI,CAACC,0BAA0B,CAAC5F,OAAO,CAAC,AAAC;QAE1E,8EAA8E;QAC9E6F,CAAAA,GAAAA,UAAiB,AAAkE,CAAA,kBAAlE,CAACL,UAAU,EAAE,IAAIM,kCAAiC,kCAAA,EAAE,CAACC,UAAU,EAAE,CAAC,CAAC;QAEpF,wEAAwE;QACxE,yEAAyE;QACzE,0EAA0E;QAC1E,2EAA2E;QAC3E,gDAAgD;QAChD,4CAA4C;QAC5CF,CAAAA,GAAAA,UAAiB,AAA6C,CAAA,kBAA7C,CAACL,UAAU,EAAEG,kBAAkB,CAACI,UAAU,EAAE,CAAC,CAAC;YAKnD/F,OAAuB;QAHnCwF,UAAU,CAACQ,GAAG,CACZ,IAAIC,2BAA0B,2BAAA,CAAC,IAAI,CAACnF,WAAW,EAAE;YAC/C,0CAA0C;YAC1CoF,MAAM,EAAElG,CAAAA,OAAuB,GAAvBA,OAAO,CAAC8D,QAAQ,CAACoC,MAAM,YAAvBlG,OAAuB,GAAI,IAAI;SACxC,CAAC,CAAC+F,UAAU,EAAE,CAChB,CAAC;QACFP,UAAU,CAACQ,GAAG,CAAC,IAAIG,4BAA2B,4BAAA,CAAC,IAAI,CAACrF,WAAW,CAAC,CAACiF,UAAU,EAAE,CAAC,CAAC;QAE/E,MAAMK,kBAAkB,GAAG,IAAIC,0BAAyB,0BAAA,CAAC,IAAI,CAACvF,WAAW,EAAE;YACzEwF,UAAU,EAAEjH,kBAAkB,CAAC,IAAI,CAACyB,WAAW,CAAC;YAChDyF,WAAW,EAAE,CAAC,EAAEC,OAAO,CAAA,EAAE,GAAK;gBAC5B,IAAIA,OAAO,KAAK,QAAQ,EAAE;wBACjB,GAAe;oBAAtB,OAAO,CAAA,GAAe,GAAf,IAAI,CAACxB,UAAU,SAAuB,GAAtC,KAAA,CAAsC,GAAtC,GAAe,CAAEyB,qBAAqB,EAAE,CAAC;iBACjD,MAAM;wBACE,IAAe;oBAAtB,OAAO,CAAA,IAAe,GAAf,IAAI,CAACzB,UAAU,SAAc,GAA7B,KAAA,CAA6B,GAA7B,IAAe,CAAE0B,YAAY,CAAC;wBACnCR,MAAM,EAAE,KAAK;qBACd,CAAC,CAAC;iBACJ;aACF;SACF,CAAC,AAAC;QACHV,UAAU,CAACQ,GAAG,CAACI,kBAAkB,CAACL,UAAU,EAAE,CAAC,CAAC;QAEhDP,UAAU,CAACQ,GAAG,CAAC,IAAIW,qBAAoB,qBAAA,CAAC,IAAI,CAAC7F,WAAW,CAAC,CAACiF,UAAU,EAAE,CAAC,CAAC;QAExE,mFAAmF;QACnF,IAAI,IAAI,CAACa,cAAc,EAAE,EAAE;gBAEPC,IAAO;YADzB,MAAM,EAAEA,GAAG,CAAA,EAAE,GAAGrE,CAAAA,GAAAA,OAAS,AAAuD,CAAA,UAAvD,CAAC,IAAI,CAAC1B,WAAW,EAAE;gBAAEgG,yBAAyB,EAAE,IAAI;aAAE,CAAC,AAAC;YACjF,MAAMC,SAAS,GAAGF,CAAAA,CAAAA,IAAO,GAAPA,GAAG,CAACG,GAAG,SAAQ,GAAfH,KAAAA,CAAe,GAAfA,IAAO,CAAEI,MAAM,CAAA,KAAK,QAAQ,AAAC;YAE/C,oHAAoH;YACpHzB,UAAU,CAACQ,GAAG,CAAC,IAAIkB,sBAAqB,sBAAA,CAAC,IAAI,CAACpG,WAAW,CAAC,CAACiF,UAAU,EAAE,CAAC,CAAC;YAEzE,0GAA0G;YAC1GP,UAAU,CAACQ,GAAG,CAAC,IAAImB,kBAAiB,kBAAA,CAAC,IAAI,CAACrG,WAAW,CAAC,CAACiF,UAAU,EAAE,CAAC,CAAC;YAErE,IAAIgB,SAAS,EAAE;gBACbvB,UAAU,CAACQ,GAAG,CAAC,OAAOoB,GAAkB,EAAEC,GAAmB,EAAEC,IAAgB,GAAK;oBAClF,IAAI,CAACF,CAAAA,GAAG,QAAK,GAARA,KAAAA,CAAQ,GAARA,GAAG,CAAE3G,GAAG,CAAA,EAAE;wBACb,OAAO6G,IAAI,EAAE,CAAC;qBACf;oBAED,0CAA0C;oBAC1C,IAAIF,GAAG,CAAC3G,GAAG,CAAC8G,QAAQ,CAAC,MAAM,CAAC,EAAE;wBAC5B,OAAOD,IAAI,EAAE,CAAC;qBACf;oBACD,IAAIF,GAAG,CAAC3G,GAAG,CAAC+G,QAAQ,CAAC,0BAA0B,CAAC,EAAE;wBAChD,OAAOF,IAAI,EAAE,CAAC;qBACf;oBAED,IAAI;4BAEMtH,KAAY;wBADpB,MAAM,EAAEkE,OAAO,CAAA,EAAE,GAAG,MAAM,IAAI,CAACP,kBAAkB,CAACyD,GAAG,CAAC3G,GAAG,EAAE;4BACzDS,IAAI,EAAElB,CAAAA,KAAY,GAAZA,OAAO,CAACkB,IAAI,YAAZlB,KAAY,GAAI,aAAa;yBACpC,CAAC,AAAC;wBAEHqH,GAAG,CAACI,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;wBAC3CJ,GAAG,CAACK,GAAG,CAACxD,OAAO,CAAC,CAAC;wBACjB,OAAO;qBACR,CAAC,OAAOlB,KAAK,EAAO;wBACnBqE,GAAG,CAACI,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;wBAC3C,IAAI;4BACFJ,GAAG,CAACK,GAAG,CAAC,MAAM,IAAI,CAACjE,sBAAsB,CAACT,KAAK,CAAC,CAAC,CAAC;yBACnD,CAAC,OAAO2E,WAAW,EAAO;4BACzB,uEAAuE;4BACvEN,GAAG,CAACK,GAAG,CACL,+HAA+H,GAC7H1E,KAAK,CAACQ,OAAO,GACb,YAAY,GACZmE,WAAW,CAACnE,OAAO,GACnB,SAAS,CACZ,CAAC;yBACH;qBACF;iBACF,CAAC,CAAC;aACJ;YAED,8CAA8C;YAC9C,IAAI,CAACuD,SAAS,EAAE;gBACdvB,UAAU,CAACQ,GAAG,CACZ,IAAI4B,0BAAyB,0BAAA,CAACjC,kBAAkB,CAACI,UAAU,EAAE,CAAC8B,QAAQ,CAAC,CAAC9B,UAAU,EAAE,CACrF,CAAC;aACH;SACF;QACD,qEAAqE;QACrE,MAAM+B,aAAa,GAAGlD,MAAM,CAACmD,KAAK,CAACC,IAAI,CAACpD,MAAM,CAAC,AAAC;QAEhDA,MAAM,CAACmD,KAAK,GAAG,CAACE,QAAgC,GAAK;YACnD,OAAOH,aAAa,CAAC,CAACI,GAAW,GAAK;gBACpC,IAAI,CAAC9D,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAACvE,KAAK,GAAG,IAAI,CAAC;gBAClBoI,QAAQ,QAAO,GAAfA,KAAAA,CAAe,GAAfA,QAAQ,CAAGC,GAAG,CAAC,AAjZvB,CAiZwB;aACjB,CAAC,CAAC;SACJ,CAAC;QAEF,IAAI,CAACrI,KAAK,GAAGA,KAAK,CAAC;QACnB,OAAO;YACL+E,MAAM;YACNd,QAAQ,EAAE;gBACR,mDAAmD;gBACnD7D,IAAI,EAAED,OAAO,CAACC,IAAI;gBAClB,kCAAkC;gBAClCkI,IAAI,EAAE,WAAW;gBACjB,iDAAiD;gBACjD1H,GAAG,EAAE,CAAC,iBAAiB,EAAET,OAAO,CAACC,IAAI,CAAC,CAAC;gBACvCmI,QAAQ,EAAE,MAAM;aACjB;YACD5C,UAAU;YACVC,aAAa;SACd,CAAC;KACH;IAED,MAAa4C,sBAAsB,GAAqB;QACtD,IAAI,CAAC,IAAI,CAACjE,QAAQ,EAAE;YAClB,MAAM,IAAIb,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QAED,OAAO,IAAIS,OAAO,CAAU,CAACsE,OAAO,GAAK;YACvC,IAAI,CAAC,IAAI,CAACzI,KAAK,EAAE;gBACf,4FAA4F;gBAC5F,4FAA4F;gBAC5F,mCAAmC;gBACnCN,KAAK,CAAC,oEAAoE,CAAC,CAAC;gBAC5E,OAAO+I,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;YAED,MAAMC,GAAG,GAAGC,CAAAA,GAAAA,0BAAyB,AA6BnC,CAAA,0BA7BmC,CAAC;gBACpC1H,WAAW,EAAE,IAAI,CAACA,WAAW;gBAC7B8D,MAAM,EAAE,IAAI,CAACR,QAAQ,CAAEQ,MAAM;gBAC7B/E,KAAK,EAAE,IAAI,CAACA,KAAK;gBACjB4I,QAAQ,EAAE,IAAI;gBACdC,QAAQ,EAAE,IAAI;gBACdC,UAAU,EAAE;oBAAC,QAAQ;oBAAE,KAAK;iBAAC;gBAC7BV,QAAQ,EAAE,UAAY;oBACpB,iGAAiG;oBACjGM,GAAG,EAAE,CAAC;oBACN,MAAM,EAAEK,6BAA6B,CAAA,EAAE,GAAG,MAAM;+DAC9C,uDAAuD;sBACxD,AAAC;oBAEF,IAAI;wBACF,MAAMxB,GAAG,GAAG,IAAIwB,6BAA6B,CAAC,IAAI,CAAC9H,WAAW,CAAC,AAAC;wBAChE,MAAMsG,GAAG,CAACyB,cAAc,EAAE,CAAC;wBAC3BP,OAAO,CAAC,IAAI,CAAC,CAAC;qBACf,CAAC,OAAOtF,KAAK,EAAO;wBACnB,iEAAiE;wBACjE,wCAAwC;wBACxCC,IAAG,IAAA,CAAC6F,GAAG,EAAE,CAAC;wBACV7F,IAAG,IAAA,CAACD,KAAK,CACP+F,MAAK,QAAA,CAACC,GAAG,CAAC,gGAAgG,CAAC,CAC5G,CAAC;wBACF/F,IAAG,IAAA,CAACgG,SAAS,CAACjG,KAAK,CAAC,CAAC;wBACrBsF,OAAO,CAAC,KAAK,CAAC,CAAC;qBAChB;iBACF;aACF,CAAC,AAAC;SACJ,CAAC,CAAC;KACJ;IAED,MAAaY,uBAAuB,GAAG;QACrCC,CAAAA,GAAAA,8BAAkC,AAIhC,CAAA,mCAJgC,CAAC;YACjCvE,MAAM,EAAE,IAAI,CAACR,QAAQ,CAAEQ,MAAM;YAC7B/E,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBiB,WAAW,EAAE,IAAI,CAACA,WAAW;SAC9B,CAAC,CAAC;KACJ;IAED,AAAUsI,kBAAkB,GAAa;QACvC,OAAO;YAAC,mBAAmB;YAAE,qBAAqB;YAAE,oBAAoB;SAAC,CAAC;KAC3E;CACF;QAhbYzJ,qBAAqB,GAArBA,qBAAqB;AAkb3B,SAASN,kBAAkB,CAACyB,WAAmB,EAAmB;IACvE,OAAO,OAAO,EAAE0F,OAAO,CAAA,EAAE,GAAK;QAC5B,IAAIA,OAAO,KAAK,MAAM,EAAE,OAAO;QAC/B,MAAM,EAAEK,GAAG,CAAA,EAAE,GAAGrE,CAAAA,GAAAA,OAAS,AAAa,CAAA,UAAb,CAAC1B,WAAW,CAAC,AAAC;QACvC,MAAMuI,CAAAA,GAAAA,kBAAa,AAGjB,CAAA,cAHiB,CAAC,0BAA0B,EAAE;YAC9CC,MAAM,EAAE,SAAS;YACjB,GAAGC,CAAAA,GAAAA,uBAAsB,AAAkB,CAAA,QAAlB,CAACzI,WAAW,EAAE+F,GAAG,CAAC;SAC5C,CAAC,CAAC;KACJ,CAAC;CACH;AAED,SAAStF,oBAAoB,CAC3BiI,MAAqB,EACrB,EAAEhI,GAAG,CAAA,EAAEJ,QAAQ,CAAA,EAAEK,SAAS,CAAA,EAA0D,EACpF;IACA,2EAA2E;IAC3E,MAAMgI,WAAW,GAAGD,MAAM,CACvBE,MAAM,CAAC,CAACC,KAAK,GAAKA,KAAK,CAACtG,IAAI,KAAK,KAAK;IAAA,CAAC,CACvCmB,GAAG,CAAC,CAAC,EAAEoF,QAAQ,CAAA,EAAEC,QAAQ,CAAA,EAAEC,MAAM,CAAA,EAAE,GAAK;QACvC,IAAItI,GAAG,EAAE;YACP,OAAO,CAAC,0BAA0B,EAAEoI,QAAQ,CAACG,KAAK,CAAC,EAAE,CAAC,GAAGD,MAAM,GAAG,YAAY,CAAC;SAChF,MAAM;YACL,OAAO;gBACL,CAAC,2BAA2B,EAAED,QAAQ,CAAC,aAAa,CAAC;gBACrD,CAAC,8BAA8B,EAAEA,QAAQ,CAAC,EAAE,CAAC;aAC9C,CAACnF,IAAI,CAAC,EAAE,CAAC,CAAC;SACZ;KACF,CAAC,CACDA,IAAI,CAAC,EAAE,CAAC,AAAC;IAEZ,MAAMsF,QAAQ,GAAGR,MAAM,CAACE,MAAM,CAAC,CAACC,KAAK,GAAKA,KAAK,CAACtG,IAAI,KAAK,IAAI;IAAA,CAAC,AAAC;IAE/D,MAAM4G,OAAO,GAAGxI,SAAS,GACrB,CAAC,aAAa,EAAEA,SAAS,CAAC,iBAAiB,CAAC,GAC5CuI,QAAQ,CACLxF,GAAG,CAAC,CAAC,EAAEqF,QAAQ,CAAA,EAAE,GAAK;QACrB,OAAO,CAAC,cAAc,EAAEA,QAAQ,CAAC,iBAAiB,CAAC,CAAC;KACrD,CAAC,CACDnF,IAAI,CAAC,EAAE,CAAC,AAAC;IAEhB,OAAOtD,QAAQ,CACZ8I,OAAO,CAAC,SAAS,EAAE,CAAC,EAAET,WAAW,CAAC,OAAO,CAAC,CAAC,CAC3CS,OAAO,CAAC,SAAS,EAAE,CAAC,EAAED,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;CAC9C"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport { prependMiddleware } from '@expo/dev-server';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fetch from 'node-fetch';\nimport path from 'path';\n\nimport { Log } from '../../../log';\nimport getDevClientProperties from '../../../utils/analytics/getDevClientProperties';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport { getStaticRenderFunctions } from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { DevToolsPluginMiddleware } from '../middleware/DevToolsPluginMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport { createBundleUrlPath, resolveMainModuleName } from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport {\n  DeepLinkHandler,\n  RuntimeRedirectMiddleware,\n} from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport { ServerNext, ServerRequest, ServerResponse } from '../middleware/server.types';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { getErrorOverlayHtmlAsync } from './metroErrorInterface';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport { observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: import('metro').Server | null = null;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  /** Get routes from Expo Router. */\n  async getRoutesAsync() {\n    const url = this.getDevServerUrl();\n    assert(url, 'Dev server must be started');\n    const { getManifest } = await getStaticRenderFunctions(this.projectRoot, url, {\n      // Ensure the API Routes are included\n      environment: 'node',\n    });\n\n    return getManifest({ fetchData: true });\n  }\n\n  async composeResourcesWithHtml({\n    mode,\n    resources,\n    template,\n    devBundleUrl,\n  }: {\n    mode: 'development' | 'production';\n    resources: SerialAsset[];\n    template: string;\n    devBundleUrl?: string;\n  }): Promise<string> {\n    if (!resources) {\n      return '';\n    }\n    const isDev = mode === 'development';\n    return htmlFromSerialAssets(resources, {\n      dev: isDev,\n      template,\n      bundleUrl: isDev ? devBundleUrl : undefined,\n    });\n  }\n\n  async getStaticRenderFunctionAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: 'development' | 'production';\n    minify?: boolean;\n  }) {\n    const url = this.getDevServerUrl()!;\n\n    const { getStaticContent } = await getStaticRenderFunctions(this.projectRoot, url, {\n      minify,\n      dev: mode !== 'production',\n      // Ensure the API Routes are included\n      environment: 'node',\n    });\n    return async (path: string) => {\n      return await getStaticContent(new URL(path, url));\n    };\n  }\n\n  async getStaticResourcesAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: string;\n    minify?: boolean;\n  }): Promise<SerialAsset[]> {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      minify,\n      environment: 'client',\n      serializerOutput: 'static',\n      mainModuleName: resolveMainModuleName(this.projectRoot, getConfig(this.projectRoot), 'web'),\n    });\n\n    const bundleUrl = new URL(devBundleUrlPathname, this.getDevServerUrl()!);\n\n    // Fetch the generated HTML from our custom Metro serializer\n    const results = await fetch(bundleUrl.toString());\n\n    const txt = await results.text();\n\n    let data: any;\n    try {\n      data = JSON.parse(txt);\n    } catch (error: any) {\n      Log.error(\n        'Failed to generate resources with Metro, the Metro config may not be using the correct serializer. Ensure the metro.config.js is extending the expo/metro-config and is not overriding the serializer.'\n      );\n      debug(txt);\n      throw error;\n    }\n\n    // NOTE: This could potentially need more validation in the future.\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (data != null && (data.errors || data.type?.match(/.*Error$/))) {\n      // {\n      //   type: 'InternalError',\n      //   errors: [],\n      //   message: 'Metro has encountered an error: While trying to resolve module `stylis` from file `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js`, the package `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/package.json` was successfully found. However, this package itself specifies a `main` module field that could not be resolved (`/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs`. Indeed, none of these files exist:\\n' +\n      //     '\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css)\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs/index(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css): /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/metro/src/node-haste/DependencyGraph.js (289:17)\\n' +\n      //     '\\n' +\n      //     '\\x1B[0m \\x1B[90m 287 |\\x1B[39m         }\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 288 |\\x1B[39m         \\x1B[36mif\\x1B[39m (error \\x1B[36minstanceof\\x1B[39m \\x1B[33mInvalidPackageError\\x1B[39m) {\\x1B[0m\\n' +\n      //     '\\x1B[0m\\x1B[31m\\x1B[1m>\\x1B[22m\\x1B[39m\\x1B[90m 289 |\\x1B[39m           \\x1B[36mthrow\\x1B[39m \\x1B[36mnew\\x1B[39m \\x1B[33mPackageResolutionError\\x1B[39m({\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m     |\\x1B[39m                 \\x1B[31m\\x1B[1m^\\x1B[22m\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 290 |\\x1B[39m             packageError\\x1B[33m:\\x1B[39m error\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 291 |\\x1B[39m             originModulePath\\x1B[33m:\\x1B[39m \\x1B[36mfrom\\x1B[39m\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 292 |\\x1B[39m             targetModuleName\\x1B[33m:\\x1B[39m to\\x1B[33m,\\x1B[39m\\x1B[0m'\n      // }\n      // The Metro logger already showed this error.\n      throw new Error(data.message);\n    }\n\n    throw new Error(\n      'Invalid resources returned from the Metro serializer. Expected array, found: ' + data\n    );\n  }\n\n  private async renderStaticErrorAsync(error: Error) {\n    return getErrorOverlayHtmlAsync({\n      error,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  async getStaticPageAsync(\n    pathname: string,\n    {\n      mode,\n      minify = mode !== 'development',\n    }: {\n      mode: 'development' | 'production';\n      minify?: boolean;\n    }\n  ) {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      environment: 'client',\n      mainModuleName: resolveMainModuleName(this.projectRoot, getConfig(this.projectRoot), 'web'),\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await getStaticRenderFunctions(\n        this.projectRoot,\n        this.getDevServerUrl()!,\n        {\n          minify: false,\n          dev: mode !== 'production',\n          // Ensure the API Routes are included\n          environment: 'node',\n        }\n      );\n\n      const location = new URL(pathname, this.getDevServerUrl()!);\n      return await getStaticContent(location);\n    };\n\n    const [resources, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({ mode, minify }),\n      bundleStaticHtml(),\n    ]);\n    const content = await this.composeResourcesWithHtml({\n      mode,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n\n      // Use the unversioned metro config.\n      // TODO: Deprecate this property when expo-cli goes away.\n      unversioned: false,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions\n    );\n\n    const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n    // Important that we noop source maps for context modules as soon as possible.\n    prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n    // We need the manifest handler to be the first middleware to run so our\n    // routes take precedence over static files. For example, the manifest is\n    // served from '/' and if the user has an index.html file in their project\n    // then the manifest handler will never run, the static middleware will run\n    // and serve index.html instead of the manifest.\n    // https://github.com/expo/expo/issues/13114\n    prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n    middleware.use(\n      new InterstitialPageMiddleware(this.projectRoot, {\n        // TODO: Prevent this from becoming stale.\n        scheme: options.location.scheme ?? null,\n      }).getHandler()\n    );\n    middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n    middleware.use(\n      new DevToolsPluginMiddleware(this.projectRoot, this.devToolsPluginManager).getHandler()\n    );\n\n    const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n      onDeepLink: getDeepLinkHandler(this.projectRoot),\n      getLocation: ({ runtime }) => {\n        if (runtime === 'custom') {\n          return this.urlCreator?.constructDevClientUrl();\n        } else {\n          return this.urlCreator?.constructUrl({\n            scheme: 'exp',\n          });\n        }\n      },\n    });\n    middleware.use(deepLinkMiddleware.getHandler());\n\n    middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n    // Append support for redirecting unhandled requests to the index.html page on web.\n    if (this.isTargetingWeb()) {\n      const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n      const useWebSSG = exp.web?.output === 'static';\n\n      // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n      middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n      // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n      middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n\n      if (useWebSSG) {\n        middleware.use(async (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n          if (!req?.url) {\n            return next();\n          }\n\n          // TODO: Formal manifest for allowed paths\n          if (req.url.endsWith('.ico')) {\n            return next();\n          }\n          if (req.url.includes('serializer.output=static')) {\n            return next();\n          }\n\n          try {\n            const { content } = await this.getStaticPageAsync(req.url, {\n              mode: options.mode ?? 'development',\n            });\n\n            res.setHeader('Content-Type', 'text/html');\n            res.end(content);\n            return;\n          } catch (error: any) {\n            res.setHeader('Content-Type', 'text/html');\n            try {\n              res.end(await this.renderStaticErrorAsync(error));\n            } catch (staticError: any) {\n              // Fallback error for when Expo Router is misconfigured in the project.\n              res.end(\n                '<span><h3>Internal Error:</h3><b>Project is not setup correctly for static rendering (check terminal for more info):</b><br/>' +\n                  error.message +\n                  '<br/><br/>' +\n                  staticError.message +\n                  '</span>'\n              );\n            }\n          }\n        });\n      }\n\n      // This MUST run last since it's the fallback.\n      if (!useWebSSG) {\n        middleware.use(\n          new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n        );\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        callback?.(err);\n      });\n    };\n\n    this.metro = metro;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    startTypescriptTypeGenerationAsync({\n      server: this.instance!.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n}\n\nexport function getDeepLinkHandler(projectRoot: string): DeepLinkHandler {\n  return async ({ runtime }) => {\n    if (runtime === 'expo') return;\n    const { exp } = getConfig(projectRoot);\n    await logEventAsync('dev client start command', {\n      status: 'started',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  };\n}\n\nfunction htmlFromSerialAssets(\n  assets: SerialAsset[],\n  { dev, template, bundleUrl }: { dev: boolean; template: string; bundleUrl?: string }\n) {\n  // Combine the CSS modules into tags that have hot refresh data attributes.\n  const styleString = assets\n    .filter((asset) => asset.type === 'css')\n    .map(({ metadata, filename, source }) => {\n      if (dev) {\n        return `<style data-expo-css-hmr=\"${metadata.hmrId}\">` + source + '\\n</style>';\n      } else {\n        return [\n          `<link rel=\"preload\" href=\"/${filename}\" as=\"style\">`,\n          `<link rel=\"stylesheet\" href=\"/${filename}\">`,\n        ].join('');\n      }\n    })\n    .join('');\n\n  const jsAssets = assets.filter((asset) => asset.type === 'js');\n\n  const scripts = bundleUrl\n    ? `<script src=\"${bundleUrl}\" defer></script>`\n    : jsAssets\n        .map(({ filename }) => {\n          return `<script src=\"/${filename}\" defer></script>`;\n        })\n        .join('');\n\n  return template\n    .replace('</head>', `${styleString}</head>`)\n    .replace('</body>', `${scripts}\\n</body>`);\n}\n"],"names":["getDeepLinkHandler","runtimeEnv","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","MetroBundlerDevServer","BundlerDevServer","metro","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","getRoutesAsync","url","getDevServerUrl","assert","getManifest","getStaticRenderFunctions","projectRoot","environment","fetchData","composeResourcesWithHtml","mode","resources","template","devBundleUrl","isDev","htmlFromSerialAssets","dev","bundleUrl","undefined","getStaticRenderFunctionAsync","minify","getStaticContent","path","URL","getStaticResourcesAsync","data","devBundleUrlPathname","createBundleUrlPath","platform","serializerOutput","mainModuleName","resolveMainModuleName","getConfig","results","fetch","toString","txt","text","JSON","parse","error","Log","Array","isArray","errors","type","match","Error","message","renderStaticErrorAsync","getErrorOverlayHtmlAsync","getStaticPageAsync","pathname","bundleStaticHtml","location","staticHtml","Promise","all","content","watchEnvironmentVariables","instance","envFiles","getFiles","NODE_ENV","map","fileName","join","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","parsedOptions","maxWorkers","resetCache","resetDevServer","unversioned","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","DevToolsPluginMiddleware","devToolsPluginManager","deepLinkMiddleware","RuntimeRedirectMiddleware","onDeepLink","getLocation","runtime","constructDevClientUrl","constructUrl","CreateFileMiddleware","isTargetingWeb","exp","skipSDKVersionRequirement","useWebSSG","web","output","ServeStaticMiddleware","FaviconMiddleware","req","res","next","endsWith","includes","setHeader","end","staticError","HistoryFallbackMiddleware","internal","originalClose","close","bind","callback","err","host","protocol","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","logEventAsync","status","getDevClientProperties","assets","styleString","filter","asset","metadata","filename","source","hmrId","jsAssets","scripts","replace"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/ClassicManifestMiddleware.js b/node_modules/@expo/cli/build/src/start/server/middleware/ClassicManifestMiddleware.js
index e03872c..3841cd1 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/ClassicManifestMiddleware.js
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/ClassicManifestMiddleware.js
@@ -138,7 +138,7 @@ async function createHostInfoAsync() {
         host: await _userSettings.default.getAnonymousIdentifierAsync(),
         server: "expo",
         // Defined in the build step
-        serverVersion: "0.10.11",
+        serverVersion: "0.10.13",
         serverDriver: _manifestMiddleware.DEVELOPER_TOOL,
         serverOS: _os.default.platform(),
         serverOSVersion: _os.default.release()
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js
new file mode 100644
index 0000000..d82c72d
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js
@@ -0,0 +1,58 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+Object.defineProperty(exports, "DevToolsPluginEndpoint", {
+    enumerable: true,
+    get: function() {
+        return _devToolsPluginManager.DevToolsPluginEndpoint;
+    }
+});
+var _assert = _interopRequireDefault(require("assert"));
+var _send = _interopRequireDefault(require("send"));
+var _expoMiddleware = require("./ExpoMiddleware");
+var _devToolsPluginManager = require("../DevToolsPluginManager");
+function _interopRequireDefault(obj) {
+    return obj && obj.__esModule ? obj : {
+        default: obj
+    };
+}
+class DevToolsPluginMiddleware extends _expoMiddleware.ExpoMiddleware {
+    constructor(projectRoot, pluginManager){
+        super(projectRoot, [
+            _devToolsPluginManager.DevToolsPluginEndpoint
+        ]);
+        this.pluginManager = pluginManager;
+    }
+    shouldHandleRequest(req) {
+        var ref;
+        if (!((ref = req.url) == null ? void 0 : ref.startsWith(_devToolsPluginManager.DevToolsPluginEndpoint))) {
+            return false;
+        }
+        return true;
+    }
+    async handleRequestAsync(req, res) {
+        (0, _assert).default(req.headers.host, "Request headers must include host");
+        var _url;
+        const { pathname  } = new URL((_url = req.url) != null ? _url : "/", `http://${req.headers.host}`);
+        const pluginName = pathname.substring(_devToolsPluginManager.DevToolsPluginEndpoint.length + 1).split("/")[0];
+        if (!pluginName) {
+            res.statusCode = 404;
+            res.end();
+            return;
+        }
+        const webpageRoot = await this.pluginManager.queryPluginWebpageRootAsync(pluginName);
+        if (!webpageRoot) {
+            res.statusCode = 404;
+            res.end();
+            return;
+        }
+        const pathInPluginRoot = pathname.substring(_devToolsPluginManager.DevToolsPluginEndpoint.length + pluginName.length + 1) || "/";
+        (0, _send).default(req, pathInPluginRoot, {
+            root: webpageRoot
+        }).pipe(res);
+    }
+}
+exports.DevToolsPluginMiddleware = DevToolsPluginMiddleware;
+
+//# sourceMappingURL=DevToolsPluginMiddleware.js.map
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js.map b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js.map
new file mode 100644
index 0000000..ac4d9ea
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/DevToolsPluginMiddleware.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../../../src/start/server/middleware/DevToolsPluginMiddleware.ts"],"sourcesContent":["import assert from 'assert';\nimport { readFile } from 'fs/promises';\nimport path from 'path';\nimport send from 'send';\n\nimport { ExpoMiddleware } from './ExpoMiddleware';\nimport { ServerRequest, ServerResponse } from './server.types';\nimport DevToolsPluginManager, { DevToolsPluginEndpoint } from '../DevToolsPluginManager';\n\nexport { DevToolsPluginEndpoint };\n\nexport class DevToolsPluginMiddleware extends ExpoMiddleware {\n  constructor(\n    projectRoot: string,\n    private readonly pluginManager: DevToolsPluginManager\n  ) {\n    super(projectRoot, [DevToolsPluginEndpoint]);\n  }\n\n  override shouldHandleRequest(req: ServerRequest): boolean {\n    if (!req.url?.startsWith(DevToolsPluginEndpoint)) {\n      return false;\n    }\n    return true;\n  }\n\n  async handleRequestAsync(req: ServerRequest, res: ServerResponse): Promise<void> {\n    assert(req.headers.host, 'Request headers must include host');\n    const { pathname } = new URL(req.url ?? '/', `http://${req.headers.host}`);\n    const pluginName = pathname.substring(DevToolsPluginEndpoint.length + 1).split('/')[0];\n    if (!pluginName) {\n      res.statusCode = 404;\n      res.end();\n      return;\n    }\n    const webpageRoot = await this.pluginManager.queryPluginWebpageRootAsync(pluginName);\n    if (!webpageRoot) {\n      res.statusCode = 404;\n      res.end();\n      return;\n    }\n\n    const pathInPluginRoot =\n      pathname.substring(DevToolsPluginEndpoint.length + pluginName.length + 1) || '/';\n    send(req, pathInPluginRoot, { root: webpageRoot }).pipe(res);\n  }\n}\n"],"names":["DevToolsPluginEndpoint","DevToolsPluginMiddleware","ExpoMiddleware","constructor","projectRoot","pluginManager","shouldHandleRequest","req","url","startsWith","handleRequestAsync","res","assert","headers","host","pathname","URL","pluginName","substring","length","split","statusCode","end","webpageRoot","queryPluginWebpageRootAsync","pathInPluginRoot","send","root","pipe"],"mappings":"AAAA;;;;+BASSA,wBAAsB;;;eAAtBA,sBAAsB,uBAAA;;;AATZ,IAAA,OAAQ,kCAAR,QAAQ,EAAA;AAGV,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEQ,IAAA,eAAkB,WAAlB,kBAAkB,CAAA;AAEa,IAAA,sBAA0B,WAA1B,0BAA0B,CAAA;;;;;;AAIjF,MAAMC,wBAAwB,SAASC,eAAc,eAAA;IAC1DC,YACEC,WAAmB,EACFC,aAAoC,CACrD;QACA,KAAK,CAACD,WAAW,EAAE;YAACJ,sBAAsB,uBAAA;SAAC,CAAC,CAAC;aAF5BK,aAAoC,GAApCA,aAAoC;KAGtD;IAED,AAASC,mBAAmB,CAACC,GAAkB,EAAW;YACnDA,GAAO;QAAZ,IAAI,EAACA,CAAAA,GAAO,GAAPA,GAAG,CAACC,GAAG,SAAY,GAAnBD,KAAAA,CAAmB,GAAnBA,GAAO,CAAEE,UAAU,CAACT,sBAAsB,uBAAA,CAAC,CAAA,EAAE;YAChD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IAED,MAAMU,kBAAkB,CAACH,GAAkB,EAAEI,GAAmB,EAAiB;QAC/EC,CAAAA,GAAAA,OAAM,AAAuD,CAAA,QAAvD,CAACL,GAAG,CAACM,OAAO,CAACC,IAAI,EAAE,mCAAmC,CAAC,CAAC;YACjCP,IAAO;QAApC,MAAM,EAAEQ,QAAQ,CAAA,EAAE,GAAG,IAAIC,GAAG,CAACT,CAAAA,IAAO,GAAPA,GAAG,CAACC,GAAG,YAAPD,IAAO,GAAI,GAAG,EAAE,CAAC,OAAO,EAAEA,GAAG,CAACM,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,AAAC;QAC3E,MAAMG,UAAU,GAAGF,QAAQ,CAACG,SAAS,CAAClB,sBAAsB,uBAAA,CAACmB,MAAM,GAAG,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAAC;QACvF,IAAI,CAACH,UAAU,EAAE;YACfN,GAAG,CAACU,UAAU,GAAG,GAAG,CAAC;YACrBV,GAAG,CAACW,GAAG,EAAE,CAAC;YACV,OAAO;SACR;QACD,MAAMC,WAAW,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACmB,2BAA2B,CAACP,UAAU,CAAC,AAAC;QACrF,IAAI,CAACM,WAAW,EAAE;YAChBZ,GAAG,CAACU,UAAU,GAAG,GAAG,CAAC;YACrBV,GAAG,CAACW,GAAG,EAAE,CAAC;YACV,OAAO;SACR;QAED,MAAMG,gBAAgB,GACpBV,QAAQ,CAACG,SAAS,CAAClB,sBAAsB,uBAAA,CAACmB,MAAM,GAAGF,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,AAAC;QACnFO,CAAAA,GAAAA,KAAI,AAA8C,CAAA,QAA9C,CAACnB,GAAG,EAAEkB,gBAAgB,EAAE;YAAEE,IAAI,EAAEJ,WAAW;SAAE,CAAC,CAACK,IAAI,CAACjB,GAAG,CAAC,CAAC;KAC9D;CACF;QAnCYV,wBAAwB,GAAxBA,wBAAwB"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js
index 9babae5..05139d9 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js
@@ -34,7 +34,7 @@ class ExpoMiddleware {
     /**
    * Returns true when the middleware should handle the incoming server request.
    * Exposed for testing.
-   */ _shouldHandleRequest(req) {
+   */ shouldHandleRequest(req) {
         if (!req.url) {
             return false;
         }
@@ -63,7 +63,7 @@ class ExpoMiddleware {
             }
         };
         const middleware = async (req, res, next)=>{
-            if (!this._shouldHandleRequest(req)) {
+            if (!this.shouldHandleRequest(req)) {
                 return next();
             }
             return internalMiddleware(req, res, next);
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map
index 4c27463..a64c784 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/ExpoMiddleware.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/middleware/ExpoMiddleware.ts"],"sourcesContent":["import { parse } from 'url';\n\nimport * as Log from '../../../log';\nimport { ServerNext, ServerRequest, ServerResponse } from './server.types';\n\n/** Base middleware creator for Expo dev servers. */\nexport abstract class ExpoMiddleware {\n  constructor(protected projectRoot: string, protected supportedPaths: string[]) {}\n\n  /**\n   * Returns true when the middleware should handle the incoming server request.\n   * Exposed for testing.\n   */\n  _shouldHandleRequest(req: ServerRequest): boolean {\n    if (!req.url) {\n      return false;\n    }\n    const parsed = parse(req.url);\n    // Strip the query params\n    if (!parsed.pathname) {\n      return false;\n    }\n\n    return this.supportedPaths.includes(parsed.pathname);\n  }\n\n  abstract handleRequestAsync(\n    req: ServerRequest,\n    res: ServerResponse,\n    next: ServerNext\n  ): Promise<void>;\n\n  /** Create a server middleware handler. */\n  public getHandler() {\n    const internalMiddleware = async (\n      req: ServerRequest,\n      res: ServerResponse,\n      next: ServerNext\n    ) => {\n      try {\n        return await this.handleRequestAsync(req, res, next);\n      } catch (error: any) {\n        Log.exception(error);\n        // 5xx = Server Error HTTP code\n        res.statusCode = 500;\n        if (typeof error === 'object' && error !== null) {\n          res.end(\n            JSON.stringify({\n              error: error.toString(),\n            })\n          );\n        } else {\n          res.end(`Unexpected error: ${error}`);\n        }\n      }\n    };\n    const middleware = async (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n      if (!this._shouldHandleRequest(req)) {\n        return next();\n      }\n      return internalMiddleware(req, res, next);\n    };\n\n    middleware.internal = internalMiddleware;\n\n    return middleware;\n  }\n}\n\nexport function disableResponseCache(res: ServerResponse): ServerResponse {\n  res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n  res.setHeader('Expires', '-1');\n  res.setHeader('Pragma', 'no-cache');\n  return res;\n}\n"],"names":["disableResponseCache","Log","ExpoMiddleware","constructor","projectRoot","supportedPaths","_shouldHandleRequest","req","url","parsed","parse","pathname","includes","getHandler","internalMiddleware","res","next","handleRequestAsync","error","exception","statusCode","end","JSON","stringify","toString","middleware","internal","setHeader"],"mappings":"AAAA;;;;QAqEgBA,oBAAoB,GAApBA,oBAAoB;AArEd,IAAA,IAAK,WAAL,KAAK,CAAA;AAEfC,IAAAA,GAAG,mCAAM,cAAc,EAApB;;;;;;;;;;;;;;;;;;;;;;AAIR,MAAeC,cAAc;IAClCC,YAAsBC,WAAmB,EAAYC,cAAwB,CAAE;aAAzDD,WAAmB,GAAnBA,WAAmB;aAAYC,cAAwB,GAAxBA,cAAwB;KAAI;IAEjF;;;KAGG,CACHC,oBAAoB,CAACC,GAAkB,EAAW;QAChD,IAAI,CAACA,GAAG,CAACC,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QACD,MAAMC,MAAM,GAAGC,CAAAA,GAAAA,IAAK,AAAS,CAAA,MAAT,CAACH,GAAG,CAACC,GAAG,CAAC,AAAC;QAC9B,yBAAyB;QACzB,IAAI,CAACC,MAAM,CAACE,QAAQ,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACH,MAAM,CAACE,QAAQ,CAAC,CAAC;KACtD;IAQD,0CAA0C,CAC1C,AAAOE,UAAU,GAAG;QAClB,MAAMC,kBAAkB,GAAG,OACzBP,GAAkB,EAClBQ,GAAmB,EACnBC,IAAgB,GACb;YACH,IAAI;gBACF,OAAO,MAAM,IAAI,CAACC,kBAAkB,CAACV,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;aACtD,CAAC,OAAOE,KAAK,EAAO;gBACnBjB,GAAG,CAACkB,SAAS,CAACD,KAAK,CAAC,CAAC;gBACrB,+BAA+B;gBAC/BH,GAAG,CAACK,UAAU,GAAG,GAAG,CAAC;gBACrB,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;oBAC/CH,GAAG,CAACM,GAAG,CACLC,IAAI,CAACC,SAAS,CAAC;wBACbL,KAAK,EAAEA,KAAK,CAACM,QAAQ,EAAE;qBACxB,CAAC,CACH,CAAC;iBACH,MAAM;oBACLT,GAAG,CAACM,GAAG,CAAC,CAAC,kBAAkB,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC;iBACvC;aACF;SACF,AAAC;QACF,MAAMO,UAAU,GAAG,OAAOlB,GAAkB,EAAEQ,GAAmB,EAAEC,IAAgB,GAAK;YACtF,IAAI,CAAC,IAAI,CAACV,oBAAoB,CAACC,GAAG,CAAC,EAAE;gBACnC,OAAOS,IAAI,EAAE,CAAC;aACf;YACD,OAAOF,kBAAkB,CAACP,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;SAC3C,AAAC;QAEFS,UAAU,CAACC,QAAQ,GAAGZ,kBAAkB,CAAC;QAEzC,OAAOW,UAAU,CAAC;KACnB;CACF;QA7DqBvB,cAAc,GAAdA,cAAc;AA+D7B,SAASF,oBAAoB,CAACe,GAAmB,EAAkB;IACxEA,GAAG,CAACY,SAAS,CAAC,eAAe,EAAE,8CAA8C,CAAC,CAAC;IAC/EZ,GAAG,CAACY,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/BZ,GAAG,CAACY,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACpC,OAAOZ,GAAG,CAAC;CACZ"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/middleware/ExpoMiddleware.ts"],"sourcesContent":["import { parse } from 'url';\n\nimport * as Log from '../../../log';\nimport { ServerNext, ServerRequest, ServerResponse } from './server.types';\n\n/** Base middleware creator for Expo dev servers. */\nexport abstract class ExpoMiddleware {\n  constructor(protected projectRoot: string, protected supportedPaths: string[]) {}\n\n  /**\n   * Returns true when the middleware should handle the incoming server request.\n   * Exposed for testing.\n   */\n  public shouldHandleRequest(req: ServerRequest): boolean {\n    if (!req.url) {\n      return false;\n    }\n    const parsed = parse(req.url);\n    // Strip the query params\n    if (!parsed.pathname) {\n      return false;\n    }\n\n    return this.supportedPaths.includes(parsed.pathname);\n  }\n\n  abstract handleRequestAsync(\n    req: ServerRequest,\n    res: ServerResponse,\n    next: ServerNext\n  ): Promise<void>;\n\n  /** Create a server middleware handler. */\n  public getHandler() {\n    const internalMiddleware = async (\n      req: ServerRequest,\n      res: ServerResponse,\n      next: ServerNext\n    ) => {\n      try {\n        return await this.handleRequestAsync(req, res, next);\n      } catch (error: any) {\n        Log.exception(error);\n        // 5xx = Server Error HTTP code\n        res.statusCode = 500;\n        if (typeof error === 'object' && error !== null) {\n          res.end(\n            JSON.stringify({\n              error: error.toString(),\n            })\n          );\n        } else {\n          res.end(`Unexpected error: ${error}`);\n        }\n      }\n    };\n    const middleware = async (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n      if (!this.shouldHandleRequest(req)) {\n        return next();\n      }\n      return internalMiddleware(req, res, next);\n    };\n\n    middleware.internal = internalMiddleware;\n\n    return middleware;\n  }\n}\n\nexport function disableResponseCache(res: ServerResponse): ServerResponse {\n  res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n  res.setHeader('Expires', '-1');\n  res.setHeader('Pragma', 'no-cache');\n  return res;\n}\n"],"names":["disableResponseCache","Log","ExpoMiddleware","constructor","projectRoot","supportedPaths","shouldHandleRequest","req","url","parsed","parse","pathname","includes","getHandler","internalMiddleware","res","next","handleRequestAsync","error","exception","statusCode","end","JSON","stringify","toString","middleware","internal","setHeader"],"mappings":"AAAA;;;;QAqEgBA,oBAAoB,GAApBA,oBAAoB;AArEd,IAAA,IAAK,WAAL,KAAK,CAAA;AAEfC,IAAAA,GAAG,mCAAM,cAAc,EAApB;;;;;;;;;;;;;;;;;;;;;;AAIR,MAAeC,cAAc;IAClCC,YAAsBC,WAAmB,EAAYC,cAAwB,CAAE;aAAzDD,WAAmB,GAAnBA,WAAmB;aAAYC,cAAwB,GAAxBA,cAAwB;KAAI;IAEjF;;;KAGG,CACH,AAAOC,mBAAmB,CAACC,GAAkB,EAAW;QACtD,IAAI,CAACA,GAAG,CAACC,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QACD,MAAMC,MAAM,GAAGC,CAAAA,GAAAA,IAAK,AAAS,CAAA,MAAT,CAACH,GAAG,CAACC,GAAG,CAAC,AAAC;QAC9B,yBAAyB;QACzB,IAAI,CAACC,MAAM,CAACE,QAAQ,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACH,MAAM,CAACE,QAAQ,CAAC,CAAC;KACtD;IAQD,0CAA0C,CAC1C,AAAOE,UAAU,GAAG;QAClB,MAAMC,kBAAkB,GAAG,OACzBP,GAAkB,EAClBQ,GAAmB,EACnBC,IAAgB,GACb;YACH,IAAI;gBACF,OAAO,MAAM,IAAI,CAACC,kBAAkB,CAACV,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;aACtD,CAAC,OAAOE,KAAK,EAAO;gBACnBjB,GAAG,CAACkB,SAAS,CAACD,KAAK,CAAC,CAAC;gBACrB,+BAA+B;gBAC/BH,GAAG,CAACK,UAAU,GAAG,GAAG,CAAC;gBACrB,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;oBAC/CH,GAAG,CAACM,GAAG,CACLC,IAAI,CAACC,SAAS,CAAC;wBACbL,KAAK,EAAEA,KAAK,CAACM,QAAQ,EAAE;qBACxB,CAAC,CACH,CAAC;iBACH,MAAM;oBACLT,GAAG,CAACM,GAAG,CAAC,CAAC,kBAAkB,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC;iBACvC;aACF;SACF,AAAC;QACF,MAAMO,UAAU,GAAG,OAAOlB,GAAkB,EAAEQ,GAAmB,EAAEC,IAAgB,GAAK;YACtF,IAAI,CAAC,IAAI,CAACV,mBAAmB,CAACC,GAAG,CAAC,EAAE;gBAClC,OAAOS,IAAI,EAAE,CAAC;aACf;YACD,OAAOF,kBAAkB,CAACP,GAAG,EAAEQ,GAAG,EAAEC,IAAI,CAAC,CAAC;SAC3C,AAAC;QAEFS,UAAU,CAACC,QAAQ,GAAGZ,kBAAkB,CAAC;QAEzC,OAAOW,UAAU,CAAC;KACnB;CACF;QA7DqBvB,cAAc,GAAdA,cAAc;AA+D7B,SAASF,oBAAoB,CAACe,GAAmB,EAAkB;IACxEA,GAAG,CAACY,SAAS,CAAC,eAAe,EAAE,8CAA8C,CAAC,CAAC;IAC/EZ,GAAG,CAACY,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/BZ,GAAG,CAACY,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACpC,OAAOZ,GAAG,CAAC;CACZ"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/analytics/rudderstackClient.js b/node_modules/@expo/cli/build/src/utils/analytics/rudderstackClient.js
index ff39457..080d6af 100644
--- a/node_modules/@expo/cli/build/src/utils/analytics/rudderstackClient.js
+++ b/node_modules/@expo/cli/build/src/utils/analytics/rudderstackClient.js
@@ -94,7 +94,7 @@ async function logEventAsync(event, properties = {}) {
     }
     const { userId , deviceId  } = identifyData;
     const commonEventProperties = {
-        source_version: "0.10.11",
+        source_version: "0.10.13",
         source: "expo"
     };
     const identity = {
@@ -135,7 +135,7 @@ function getContext() {
         },
         app: {
             name: "expo",
-            version: "0.10.11"
+            version: "0.10.13"
         },
         ci: ciInfo.isCI ? {
             name: ciInfo.name,
